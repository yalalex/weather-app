{"version":3,"sources":["components/layout/spinner.gif","context/weather/weatherContext.js","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","components/pages/NotFound.js","context/weather/weatherReducer.js","context/types.js","context/weather/WeatherState.js","App.js","index.js"],"names":["module","exports","weatherContext","createContext","Navbar","useContext","WeatherContext","units","lang","switchLang","switchUnits","className","to","onClick","Alert","alert","type","msg","Search","history","location","searchPlaces","clearSearch","setAlert","places","useState","text","setText","useEffect","push","onSubmit","e","preventDefault","name","value","placeholder","onChange","target","length","pathname","PeriodItem","period","offset","dt","main","weather","time","locale","unix","format","alt","description","src","icon","style","width","temp","toFixed","DayItem","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","Spinner","spinner","margin","display","Forecast","current","forecastToday","forecast15","getWeather","place","loading","btn","setBtn","setTarget","switchButton","timezone","sky","wind","pressure","humidity","Date","getTimezoneOffset","switchTarget","exact","path","render","props","map","key","PlaceItem","selectPlace","setTemp","setSky","setIcon","getPlaceWeather","a","latitude","longitude","axios","get","process","res","data","city","regionCode","country","Places","id","About","href","NotFound","state","action","payload","WeatherState","useReducer","WeatherReducer","dispatch","setLoading","config","headers","setTimeout","respo","sys","sunrise","sunset","speed","resp","today","list","slice","un","Provider","children","App","component","ReactDOM","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,qC,mJCI5BC,EAFQC,0BCkDRC,EAhDA,WACb,IAAMF,EAAiBG,qBAAWC,GAC1BC,EAAyCL,EAAzCK,MAAOC,EAAkCN,EAAlCM,KAAMC,EAA4BP,EAA5BO,WAAYC,EAAgBR,EAAhBQ,YACjC,OACE,yBAAKC,UAAU,qBACb,4BACE,uBAAGA,UAAU,0BADf,gBAGA,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,gBAAyB,OAATJ,EAAgB,SAAW,mCAEtD,4BACE,kBAAC,IAAD,CAAMI,GAAG,sBACG,OAATJ,EAAgB,QAAU,6BAG/B,4BACE,yBAAKG,UAAU,UACb,yBAAKA,UAAU,UACF,WAAVJ,EAAqB,QAAO,QAC7B,uBAAGI,UAAU,sBAEf,wBAAIA,UAAU,eACZ,wBAAIE,QAAS,kBAAMH,EAAYH,KAClB,WAAVA,EAAqB,QAAO,YAKrC,4BACE,yBAAKI,UAAU,UACb,yBAAKA,UAAU,UACH,OAATH,EAAgB,KAAO,KACxB,uBAAGG,UAAU,sBAEf,wBAAIA,UAAU,eACZ,wBAAIE,QAAS,kBAAMJ,EAAWD,KAClB,OAATA,EAAgB,KAAO,YCzBzBM,EAdD,WACZ,IAEQC,EAFeV,qBAAWC,GAE1BS,MAER,OACY,OAAVA,GACE,yBAAKJ,UAAS,sBAAiBI,EAAMC,KAAvB,iBACZ,uBAAGL,UAAU,uBADf,IACwCI,EAAME,M,OCiDrCC,EAzDA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACnBlB,EAAiBG,qBAAWC,GAE1Be,EAAsDnB,EAAtDmB,aAAcC,EAAwCpB,EAAxCoB,YAAaC,EAA2BrB,EAA3BqB,SAAUf,EAAiBN,EAAjBM,KAAMgB,EAAWtB,EAAXsB,OAHX,EAKhBC,mBAAS,IALO,mBAKjCC,EALiC,KAK3BC,EAL2B,KAOxCC,qBAAU,WACRT,EAAQU,KAAK,kBAEZ,CAACL,IAkBJ,OACE,6BACE,0BAAMM,SAlBO,SAAAC,IACfA,EAAEC,iBACW,KAATN,GAKFH,EAHW,OAATf,EACI,yBACA,mKACU,SAEhBa,EAAaK,GACbC,EAAQ,MAQkBhB,UAAU,QAClC,2BACEK,KAAK,OACLiB,KAAK,OACLC,MAAOR,EACPS,YACW,OAAT3B,EACI,qBACA,6NAEN4B,SAdS,SAAAL,GAAC,OAAIJ,EAAQI,EAAEM,OAAOH,UAgBjC,2BACElB,KAAK,SACLkB,MAAgB,OAAT1B,EAAgB,SAAW,iCAClCG,UAAU,4BAGba,EAAOc,OAAS,GAA2B,iBAAtBlB,EAASmB,UAC7B,4BAAQ5B,UAAU,8BAA8BE,QAASS,GAC7C,OAATd,EAAgB,QAAU,sD,iBCxBtBgC,EAzBI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,OAAQlC,EAAW,EAAXA,KAC5BmC,EAAsBF,EAAtBE,GAAIC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QAChBC,EAAOH,EAAKD,EACd,OACE,yBAAK/B,UAAU,eACb,4BACE,kBAAC,IAAD,CAAQoC,OAAQvC,EAAMwC,MAAI,EAACC,OAAO,UAC/BH,IAGL,yBACEI,IAAKL,EAAQ,GAAGM,YAChBC,IAAG,4CAAuCP,EAAQ,GAAGQ,KAAlD,WACHC,MAAO,CAAEC,MAAO,WAElB,4BAAKX,EAAKY,KAAKC,UAAf,UC+CSC,EA9DC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,IAAKnD,EAAkB,EAAlBA,KAAMD,EAAY,EAAZA,MACpBqD,EAA6DD,EAA7DC,GAAIC,EAAyDF,EAAzDE,SAAUC,EAA+CH,EAA/CG,SAAUC,EAAqCJ,EAArCI,SAAUC,EAA2BL,EAA3BK,IAAKC,EAAsBN,EAAtBM,KAAMC,EAAgBP,EAAhBO,GAAIrB,EAAYc,EAAZd,QACzD,OACE,kBAAC,WAAD,KACE,yBAAKlC,UAAU,eACb,4BACE,kBAAC,IAAD,CAAQoC,OAAQvC,EAAMwC,MAAI,EAACC,OAAO,SAC/BW,IAGL,yBACEV,IAAKL,EAAQM,YACbC,IAAG,qDAAgDP,EAAQQ,KAAxD,QACHC,MAAO,CAAEC,MAAO,UAElB,4BACGM,EAASJ,UADZ,QACyBK,EAASL,UADlC,QAGA,yBAAK9C,UAAU,cACb,6BACE,4BACE,4BACE,uBAAGA,UAAU,oBACZqD,EAFH,KAIA,4BACE,uBAAGrD,UAAU,iBACZuD,EAFH,OAMJ,6BACE,4BACE,4BACE,uBAAGvD,UAAU,gBACZoD,EAASN,QAAQ,GACR,OAATjD,EACa,WAAVD,EACE,MACA,MACQ,WAAVA,EACA,WACA,iBAEN,4BACE,uBAAGI,UAAU,kBACZsD,EAAKR,UACI,OAATjD,EAAgB,KAAO,sB,iBCtCzB2D,EAVC,kBACd,kBAAC,WAAD,KACE,yBACEf,IAAKgB,IACLlB,IAAI,aACJI,MAAO,CAAEC,MAAO,OAAQc,OAAQ,OAAQC,QAAS,aC0KxCC,EA1KE,WACf,IAAMrE,EAAiBG,qBAAWC,GAGhCkE,EAQEtE,EARFsE,QACAC,EAOEvE,EAPFuE,cACAC,EAMExE,EANFwE,WACAC,EAKEzE,EALFyE,WACAC,EAIE1E,EAJF0E,MACAC,EAGE3E,EAHF2E,QACAtE,EAEEL,EAFFK,MACAC,EACEN,EADFM,KAXmB,EAcCiB,mBAAS,IAdV,mBAcdqD,EAdc,KAcTC,EAdS,OAeOtD,mBAAS,IAfhB,mBAedY,EAfc,KAeN2C,EAfM,KAiBrBpD,qBAAU,WACK,OAATpB,GACFuE,EAAO,mBACPC,EAAU,YAEVD,EAAO,uFACPC,EAAU,aAGX,IAEHpD,qBAAU,WACRqD,MAEC,CAACzE,EAAM6B,IAEVT,qBAAU,WACR+C,EAAWC,EAAOrE,KAEjB,CAACA,IAEJ,IAQM0E,EAAe,WAGbF,EAFK,WAAX1C,EACa,OAAT7B,EACS,kBACA,sFACA,OAATA,EACO,iBACA,8FAITyB,EAUEuC,EAVFvC,KACAiD,EASEV,EATFU,SACAvC,EAQE6B,EARF7B,GACAE,EAOE2B,EAPF3B,QACAsC,EAMEX,EANFW,IACAC,EAKEZ,EALFY,KACA5B,EAIEgB,EAJFhB,KACA6B,EAGEb,EAHFa,SACAC,EAEEd,EAFFc,SACAjC,EACEmB,EADFnB,KAEFX,EAA0C,IAAjC,IAAI6C,MAAOC,oBAA2BN,EAC/CpC,EAAOH,EAAKD,EACd,OAAImC,GAAiC,IAAtBH,EAAWpC,OACjB,kBAAC,EAAD,MAGL,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,yBAAK3B,UAAU,eACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEuC,IAAKiC,EACL/B,IAAG,4CAAuCC,EAAvC,WACHC,MAAO,CAAEC,MAAO,YAGpB,yBAAKD,MAAO,CAAEe,OAAQ,WACpB,4BAAKb,EAAKC,UAAV,QACA,4BACGiB,EAAW,GAAGb,SAASJ,UAD1B,QAEGiB,EAAW,GAAGZ,SAASL,UAF1B,QAIA,4BAAKxB,GACL,4BACE,kBAAC,IAAD,CAAQc,OAAQvC,EAAMwC,MAAI,EAACC,OAAO,MAC/BH,MAKT,yBAAKQ,MAAO,CAAEe,OAAQ,WACpB,4BACE,4BACE,4BAAc,OAAT7D,EAAgBqC,EAAU,2FAEjC,4BACE,uBAAGlC,UAAU,iBAAkB,IACrB,OAATH,EAAgB,aAAe,2DAC/B8E,EAHH,KAKA,4BACE,uBAAG3E,UAAU,gBAAiB,IACpB,OAATH,EAAgB,SAAW,mCAC3B4E,EAAK3B,QAAQ,GAAI,IACR,OAATjD,EACa,WAAVD,EACE,MACA,MACQ,WAAVA,EACA,WACA,iBAEN,4BACE,uBAAGI,UAAU,kBAAmB,IACtB,OAATH,EAAgB,aAAe,qDAC/B6E,EAAS5B,UAHZ,IAGiC,OAATjD,EAAgB,OAAS,6BAGnD,kBAAC,IAAD,CACEI,GAAE,uBAAkByB,EAAlB,YAA4BJ,GAC9BtB,UAAU,2BACVE,QAAS,kBA5FF,SAAAwB,GAEjB2C,EADa,WAAX3C,EACQ,UAEA,UAwFeoD,CAAapD,KAE3ByC,KAIP,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEY,OAAK,EACLC,KAAK,6BACLC,OAAQ,SAAAC,GAAK,OACX,yBAAKlF,UAAU,aACZ8D,EAAcqB,KAAI,SAAArD,GAAM,OACvB,kBAAC,EAAD,CACEsD,IAAKtD,EAAOE,GACZF,OAAQA,EACRC,OAAQA,EACRlC,KAAMA,WAMhB,kBAAC,IAAD,CACEkF,OAAK,EACLC,KAAK,4BACLC,OAAQ,SAAAC,GAAK,OACX,yBAAKlF,UAAU,aACZ+D,EAAWoB,KAAI,SAAAnC,GAAG,OACjB,kBAAC,EAAD,CAASoC,IAAKpC,EAAIC,GAAID,IAAKA,EAAKnD,KAAMA,EAAMD,MAAOA,e,0CC5GxDyF,EArDG,SAAC,GAAe,IAAbpB,EAAY,EAAZA,MACb1E,EAAiBG,qBAAWC,GAC1BC,EAAuBL,EAAvBK,MAAO0F,EAAgB/F,EAAhB+F,YAFgB,EAIPxE,mBAAS,IAJF,mBAIxB+B,EAJwB,KAIlB0C,EAJkB,OAKTzE,mBAAS,IALA,mBAKxB0D,EALwB,KAKnBgB,EALmB,OAMP1E,mBAAS,IANF,mBAMxB4B,EANwB,KAMlB+C,EANkB,KAQ/BxE,qBAAU,WACRyE,MAEC,CAAC9F,IAEJ,IAAM8F,EAAe,uCAAG,sCAAAC,EAAA,6DACdC,EAAwB3B,EAAxB2B,SAAUC,EAAc5B,EAAd4B,UADI,SAEJC,IAAMC,IAAN,8DACuCH,EADvC,gBACuDC,EADvD,kBAC0EjG,EAD1E,kBACyFoG,qCAHrF,OAEhBC,EAFgB,SAKIA,EAAIC,KAAtBjE,EALc,EAKdA,KAAMC,EALQ,EAKRA,QACc,OAAxBD,EAAKY,KAAKC,YAAoBb,EAAKY,KAAO,GAC9C0C,EAAQtD,EAAKY,KAAKC,WAClB0C,EAAOtD,EAAQ,GAAGM,aAClBiD,EAAQvD,EAAQ,GAAGQ,MATG,2CAAH,qDAYbyD,EAA8BlC,EAA9BkC,KAAMC,EAAwBnC,EAAxBmC,WAAYC,EAAYpC,EAAZoC,QAC1B,OACE,kBAAC,IAAD,CACEpG,GAAE,+BAA0BkG,GAC5BjG,QAAS,kBAAMoF,EAAYrB,KAE3B,yBAAKjE,UAAU,aACb,4BAAK6C,EAAL,QACA,yBACEN,IAAKiC,EACL/B,IAAG,4CAAuCC,EAAvC,WACHC,MAAO,CAAEC,MAAO,WAElB,yBAAK5C,UAAU,cACb,4BACGmG,EADH,KACWC,GAEX,4BAAKC,OC3BAC,EAhBA,WACb,IAAM/G,EAAiBG,qBAAWC,GAE1BkB,EAAoBtB,EAApBsB,OACR,OAD4BtB,EAAZ2E,QAEP,kBAAC,EAAD,MAGL,yBAAKlE,UAAU,aACZa,EAAOsE,KAAI,SAAAlB,GAAK,OACf,kBAAC,EAAD,CAAWmB,IAAKnB,EAAMsC,GAAItC,MAAOA,SCoB5BuC,EAhCD,WAEZ,MAA+B,OADR9G,qBAAWC,GACZE,KACpB,kBAAC,WAAD,KACE,8CACA,6GAIA,wJAIA,sCACU,uBAAG4G,KAAK,+BAAR,yBADV,MAKF,kBAAC,WAAD,KACE,mGACA,8TACA,mlBAIA,mEACS,uBAAGA,KAAK,+BAAR,2GADT,OCVSC,EAfE,WAEf,MAA+B,OADRhH,qBAAWC,GACZE,KACpB,kBAAC,WAAD,KACE,yCACA,uBAAGG,UAAU,QAAb,mDAGF,kBAAC,WAAD,KACE,wIACA,uBAAGA,UAAU,QAAb,4N,eCCS,WAAC2G,EAAOC,GACrB,OAAQA,EAAOvG,MACb,IChByB,gBDiBvB,OAAO,eACFsG,EADL,CAEE9F,OAAQ+F,EAAOC,QACf3C,SAAS,IAEb,ICpBwB,eDqBtB,OAAO,eACFyC,EADL,CAEE9F,OAAQ,KAEZ,IC1BwB,eD2BtB,OAAO,eACF8F,EADL,CAEE1C,MAAO2C,EAAOC,UAElB,IC3B+B,sBD4B7B,OAAO,eACFF,EADL,CAEE9C,QAAS+C,EAAOC,UAEpB,IC/B6B,oBDgC3B,OAAO,eACFF,EADL,CAEE7C,cAAe8C,EAAOC,UAE1B,ICnCwB,eDoCtB,OAAO,eACFF,EADL,CAEE5C,WAAY6C,EAAOC,QACnB3C,SAAS,IAEb,ICxCuB,cDyCrB,OAAO,eACFyC,EADL,CAEE9G,KAAyB,OAAnB+G,EAAOC,QAAmB,KAAO,OAE3C,IC5CwB,eD6CtB,OAAO,eACFF,EADL,CAEE/G,MAA0B,WAAnBgH,EAAOC,QAAuB,WAAa,WAEtD,ICvDqB,YDwDnB,OAAO,eACFF,EADL,CAEEvG,MAAOwG,EAAOC,UAElB,IC3DwB,eD4DtB,OAAO,eACFF,EADL,CAEEvG,MAAO,KACP8D,SAAS,IAEb,IC3DuB,cD4DrB,OAAO,eACFyC,EADL,CAEEzC,SAAS,IAEb,QACE,OAAOyC,IE6FEG,EAtJM,SAAA5B,GACnB,IAD4B,EAaF6B,qBAAWC,EAZhB,CACnBpH,MAAO,SACPC,KAAM,KACNqE,SAAS,EACT9D,MAAO,KACPS,OAAQ,GACRoD,MAAO,KACPJ,QAAS,GACTC,cAAe,GACfC,WAAY,KAVc,mBAarB4C,EAbqB,KAadM,EAbc,KAsBtBvG,EAAY,uCAAG,WAAMK,GAAN,mBAAA4E,EAAA,6DACnBuB,IACMC,EAAS,CACbC,QAAS,CACP,kBAAmB,4BACnB,iBAAkBpB,uDALH,SAQDF,IAAMC,IAAN,8EACuDhF,EADvD,0CAC6F4F,EAAM9G,MACnHsH,GAViB,OAYU,KAJvBlB,EARa,QAYXC,KAAKA,KAAKvE,QACVvB,EACW,OAAfuG,EAAM9G,KACF,oDACA,0XACNoH,EAAS,CAAE5G,KDtDQ,YCsDSwG,QAASzG,IACrCiH,YAAW,kBAAMJ,EAAS,CAAE5G,KDtDN,mBCsD6B,MAEnD4G,EAAS,CAAE5G,KD5DY,gBC4DSwG,QAASZ,EAAIC,KAAKA,OApBjC,2CAAH,sDA8BZlC,EAAU,uCAAG,WAAOC,EAAOrE,GAAd,yDAAA+F,EAAA,6DACjBuB,IACQf,EAA8BlC,EAA9BkC,KAAMP,EAAwB3B,EAAxB2B,SAAUC,EAAc5B,EAAd4B,UAFP,SAIGC,IAAMC,IAAN,8DACqCH,EADrC,gBACqDC,EADrD,kBACwEjG,EADxE,kBACuFoG,qCAL1F,cAIXsB,EAJW,SAOkCA,EAAMpB,KAAjD3B,EAPS,EAOTA,SAAUvC,EAPD,EAOCA,GAAIC,EAPL,EAOKA,KAAMwC,EAPX,EAOWA,KAAMvC,EAPjB,EAOiBA,QAASqF,EAP1B,EAO0BA,IACvC1E,EAA6BZ,EAA7BY,KAAM6B,EAAuBzC,EAAvByC,SAAUC,EAAa1C,EAAb0C,SAChB6C,EAAoBD,EAApBC,QAASC,EAAWF,EAAXE,OAekB,QAdzB5D,EAAU,CACdvC,KAAM6E,EACN5B,WACAvC,KACAa,OACA4B,KAAMA,EAAKiD,MACXhD,WACAC,WACAzC,QAASA,EAAQ,GAAGD,KACpBuC,IAAKtC,EAAQ,GAAGM,YAChBE,KAAMR,EAAQ,GAAGQ,KACjB8E,UACAC,WAEU5E,KAAKC,YAAoBe,EAAQhB,KAAO,GACpDoE,EAAS,CAAE5G,KD1FoB,sBC0FOwG,QAAShD,IAzB9B,UA2BEiC,IAAMC,IAAN,+DACuCH,EADvC,gBACuDC,EADvD,kBAC0EjG,EAD1E,kBACyFoG,qCA5B3F,eA2BX2B,EA3BW,QA8BXC,EAAQD,EAAKzB,KAAK2B,KAAKC,MAAM,EAAG,KAChC3C,KAAI,SAAArD,GAYR,MAXmC,OAA/BA,EAAOG,KAAKY,KAAKC,YAAoBhB,EAAOG,KAAKY,KAAO,GAExD2E,EAAU,MAAQ1F,EAAOE,IAAMF,EAAOE,GAAKyF,EAAS,MACtD3F,EAAOI,QAAQ,GAAGQ,KAAOZ,EAAOI,QAAQ,GAAGQ,KAAKoF,MAAM,GAAI,GAAK,IACtDL,EAAS3F,EAAOE,IAAMF,EAAOE,GAAKwF,EAAU,MACrD1F,EAAOI,QAAQ,GAAGQ,KAAOZ,EAAOI,QAAQ,GAAGQ,KAAKoF,MAAM,GAAI,GAAK,IACtDN,EAAU1F,EAAOE,IAAMF,EAAOE,GAAKyF,EAC5C3F,EAAOI,QAAQ,GAAGQ,KAAOZ,EAAOI,QAAQ,GAAGQ,KAAKoF,MAAM,GAAI,GAAK,IACtDL,EAAS,MAAQ3F,EAAOE,IAAMF,EAAOE,GAAKwF,IACnD1F,EAAOI,QAAQ,GAAGQ,KAAOZ,EAAOI,QAAQ,GAAGQ,KAAKoF,MAAM,GAAI,GAAK,KAE1DhG,KAETmF,EAAS,CAAE5G,KD7GkB,oBC6GOwG,QAASe,IAEvCG,EAAe,WAAVnI,EAAqB,IAAM,IA/CrB,UAgDCkG,IAAMC,IAAN,4DACqCH,EADrC,gBACqDC,EADrD,kBACwEkC,EADxE,gBACkF/B,qCAjDnF,QAgDXC,EAhDW,QAmDXlC,EAAakC,EAAIC,KAAKA,KAAK4B,MAAM,EAAG,KAC/B3C,KAAI,SAAAnC,GAGb,MAF+B,OAA3BA,EAAIE,SAASJ,YAAoBE,EAAIE,SAAW,GACrB,OAA3BF,EAAIG,SAASL,YAAoBE,EAAIG,SAAW,GAC7CH,KAETiE,EAAS,CAAE5G,KDxHa,eCwHOwG,QAAS9C,IAzDvB,4CAAH,wDAsEVmD,EAAa,kBAAMD,EAAS,CAAE5G,KDlIX,iBCoIzB,OACE,kBAAC,EAAe2H,SAAhB,CACEzG,MAAO,CACL3B,MAAO+G,EAAM/G,MACbC,KAAM8G,EAAM9G,KACZqE,QAASyC,EAAMzC,QACf9D,MAAOuG,EAAMvG,MACbS,OAAQ8F,EAAM9F,OACdoD,MAAO0C,EAAM1C,MACbJ,QAAS8C,EAAM9C,QACfC,cAAe6C,EAAM7C,cACrBC,WAAY4C,EAAM5C,WAClBrD,eACAC,YAlBc,kBAAMsG,EAAS,CAAE5G,KDvIX,kBC0JpBO,SA1HW,SAACN,EAAKD,GACrB4G,EAAS,CAAE5G,KDhCU,YCgCOwG,QAAS,CAAEvG,MAAKD,UAC5CgH,YAAW,kBAAMJ,EAAS,CAAE5G,KDhCJ,mBCgC2B,MAyH/CiF,YA5Fc,SAAArB,GAClBgD,EAAS,CAAE5G,KDjEa,eCiEOwG,QAAS5C,KA4FpCD,aACAjE,YAzBc,SAAAH,GAAK,OAAIqH,EAAS,CAAE5G,KD7Hd,eC6HkCwG,QAASjH,KA0B/DE,WA7Ba,SAAAD,GAAI,OAAIoH,EAAS,CAAE5G,KD3Hb,cC2HgCwG,QAAShH,OAgC7DqF,EAAM+C,WC7HEC,EA1BH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKlI,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOgF,KAAK,eAAemD,UAAW5H,IACtC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,eAAemD,UAAW7B,IAC5C,kBAAC,IAAD,CACEvB,OAAK,EACLC,KAAK,6BACLmD,UAAWvE,IAEb,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,qBAAqBmD,UAAW3B,IAClD,kBAAC,IAAD,CAAO2B,UAAWzB,U,MCxBhC0B,IAASnD,OAAO,kBAAC,EAAD,MAASoD,SAASC,eAAe,W","file":"static/js/main.cf4dc320.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import { createContext } from 'react';\r\n\r\nconst weatherContext = createContext();\r\n\r\nexport default weatherContext;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Navbar = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  const { units, lang, switchLang, switchUnits } = weatherContext;\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className='fas fa-cloud-sun-rain' /> Weather app\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>{lang === 'en' ? 'Search' : 'Поиск'}</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>\r\n            {lang === 'en' ? 'About' : 'Инфо'}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {units === 'metric' ? '°C' : '°F'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={() => switchUnits(units)}>\r\n                {units === 'metric' ? '°F' : '°C'}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {lang === 'en' ? 'EN' : 'RU'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={() => switchLang(lang)}>\r\n                {lang === 'en' ? 'RU' : 'EN'}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Alert = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { alert } = weatherContext;\r\n\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>\r\n        <i className='fas fa-info-circle' /> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Search = ({ history, location }) => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { searchPlaces, clearSearch, setAlert, lang, places } = weatherContext;\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    history.push('/weather-app');\r\n    //eslint-disable-next-line\r\n  }, [places]);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      const alert =\r\n        lang === 'en'\r\n          ? 'Please enter something'\r\n          : 'Пожалуйста, введите что-нибудь';\r\n      setAlert(alert, 'dark');\r\n    } else {\r\n      searchPlaces(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  const onChange = e => setText(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          value={text}\r\n          placeholder={\r\n            lang === 'en'\r\n              ? 'Enter City Name...'\r\n              : 'Введите название города на русском языке...'\r\n          }\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value={lang === 'en' ? 'Search' : 'Поиск'}\r\n          className='btn btn-dark btn-block'\r\n        />\r\n      </form>\r\n      {places.length > 0 && location.pathname === '/weather-app' && (\r\n        <button className='btn btn-grey btn-block my-1' onClick={clearSearch}>\r\n          {lang === 'en' ? 'Clear' : 'Очистить'}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period, offset, lang }) => {\r\n  const { dt, main, weather } = period,\r\n    time = dt + offset;\r\n  return (\r\n    <div className='weatheritem'>\r\n      <h3>\r\n        <Moment locale={lang} unix format='ddd LT'>\r\n          {time}\r\n        </Moment>\r\n      </h3>\r\n      <img\r\n        alt={weather[0].description}\r\n        src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n        style={{ width: '100px' }}\r\n      />\r\n      <h1>{main.temp.toFixed()}°</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React, { Fragment } from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day, lang, units }) => {\r\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day;\r\n  return (\r\n    <Fragment>\r\n      <div className='weatheritem'>\r\n        <h3>\r\n          <Moment locale={lang} unix format='dd Do'>\r\n            {ts}\r\n          </Moment>\r\n        </h3>\r\n        <img\r\n          alt={weather.description}\r\n          src={`https://www.weatherbit.io/static/img/icons/${weather.icon}.png`}\r\n          style={{ width: '70px' }}\r\n        />\r\n        <h2>\r\n          {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n        </h2>\r\n        <div className='conditions'>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <i className='fas fa-umbrella' />\r\n                {pop}%\r\n              </li>\r\n              <li>\r\n                <i className='fas fa-water' />\r\n                {rh}%\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <i className='fas fa-wind' />\r\n                {wind_spd.toFixed(1)}\r\n                {lang === 'en'\r\n                  ? units === 'metric'\r\n                    ? 'm/s'\r\n                    : 'mph'\r\n                  : units === 'metric'\r\n                  ? 'м/c'\r\n                  : 'м/ч'}\r\n              </li>\r\n              <li>\r\n                <i className='fas fa-square' />\r\n                {pres.toFixed()}\r\n                {lang === 'en' ? 'mb' : 'мб'}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\nimport Moment from 'react-moment';\r\n\r\nconst Forecast = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    current,\r\n    forecastToday,\r\n    forecast15,\r\n    getWeather,\r\n    place,\r\n    loading,\r\n    units,\r\n    lang\r\n  } = weatherContext;\r\n\r\n  const [btn, setBtn] = useState('');\r\n  const [target, setTarget] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (lang === 'en') {\r\n      setBtn('15-day forecast');\r\n      setTarget('15-day');\r\n    } else {\r\n      setBtn('Прогноз на 15 дней');\r\n      setTarget('15-day');\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    switchButton();\r\n    //eslint-disable-next-line\r\n  }, [lang, target]);\r\n\r\n  useEffect(() => {\r\n    getWeather(place, units);\r\n    //eslint-disable-next-line\r\n  }, [units]);\r\n\r\n  const switchTarget = target => {\r\n    if (target === '15-day') {\r\n      setTarget('current');\r\n    } else {\r\n      setTarget('15-day');\r\n    }\r\n  };\r\n\r\n  const switchButton = () => {\r\n    target === '15-day'\r\n      ? lang === 'en'\r\n        ? setBtn('15-day forecast')\r\n        : setBtn('Прогноз на 15 дней')\r\n      : lang === 'en'\r\n      ? setBtn('48-hr forecast')\r\n      : setBtn('Прогноз на 48 часов');\r\n  };\r\n\r\n  const {\r\n      name,\r\n      timezone,\r\n      dt,\r\n      weather,\r\n      sky,\r\n      wind,\r\n      temp,\r\n      pressure,\r\n      humidity,\r\n      icon\r\n    } = current,\r\n    offset = new Date().getTimezoneOffset() * 60 + timezone,\r\n    time = dt + offset;\r\n  if (loading || forecast15.length === 0) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <Router>\r\n        <Fragment>\r\n          <div className='card grid-2'>\r\n            <div className='card grid-2'>\r\n              <div className='all-center'>\r\n                <img\r\n                  alt={sky}\r\n                  src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                  style={{ width: '150px' }}\r\n                />\r\n              </div>\r\n              <div style={{ margin: 'auto 0' }}>\r\n                <h1>{temp.toFixed()}°</h1>\r\n                <h3>\r\n                  {forecast15[0].max_temp.toFixed()}°/\r\n                  {forecast15[0].min_temp.toFixed()}°\r\n                </h3>\r\n                <h2>{name}</h2>\r\n                <h4>\r\n                  <Moment locale={lang} unix format='LT'>\r\n                    {time}\r\n                  </Moment>\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div style={{ margin: 'auto 0' }}>\r\n              <ul>\r\n                <li>\r\n                  <h3>{lang === 'en' ? weather : 'Текущие условия:'}</h3>\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-water' />{' '}\r\n                  {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n                  {humidity}%\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-wind' />{' '}\r\n                  {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n                  {wind.toFixed(1)}{' '}\r\n                  {lang === 'en'\r\n                    ? units === 'metric'\r\n                      ? 'm/s'\r\n                      : 'mph'\r\n                    : units === 'metric'\r\n                    ? 'м/c'\r\n                    : 'м/ч'}\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-square' />{' '}\r\n                  {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n                  {pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n                </li>\r\n              </ul>\r\n              <Link\r\n                to={`/weather-app/${target}/${name}`}\r\n                className='btn btn-dark btn-sm my-1'\r\n                onClick={() => switchTarget(target)}\r\n              >\r\n                {btn}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/weather-app/current/:name'\r\n              render={props => (\r\n                <div className='listitems'>\r\n                  {forecastToday.map(period => (\r\n                    <PeriodItem\r\n                      key={period.dt}\r\n                      period={period}\r\n                      offset={offset}\r\n                      lang={lang}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path='/weather-app/15-day/:name'\r\n              render={props => (\r\n                <div className='listitems'>\r\n                  {forecast15.map(day => (\r\n                    <DayItem key={day.ts} day={day} lang={lang} units={units} />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    );\r\n};\r\n\r\nexport default Forecast;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlaceItem = ({ place }) => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  const { units, selectPlace } = weatherContext;\r\n\r\n  const [temp, setTemp] = useState('');\r\n  const [sky, setSky] = useState('');\r\n  const [icon, setIcon] = useState('');\r\n\r\n  useEffect(() => {\r\n    getPlaceWeather();\r\n    //eslint-disable-next-line\r\n  }, [units]);\r\n\r\n  const getPlaceWeather = async () => {\r\n    const { latitude, longitude } = place;\r\n    const res = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n    );\r\n    const { main, weather } = res.data;\r\n    if (main.temp.toFixed() === '-0') main.temp = 0;\r\n    setTemp(main.temp.toFixed());\r\n    setSky(weather[0].description);\r\n    setIcon(weather[0].icon);\r\n  };\r\n\r\n  const { city, regionCode, country } = place;\r\n  return (\r\n    <Link\r\n      to={`/weather-app/current/${city}`}\r\n      onClick={() => selectPlace(place)}\r\n    >\r\n      <div className='placeitem'>\r\n        <h1>{temp}°</h1>\r\n        <img\r\n          alt={sky}\r\n          src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          style={{ width: '100px' }}\r\n        />\r\n        <div className='all-center'>\r\n          <h3>\r\n            {city}, {regionCode}\r\n          </h3>\r\n          <h4>{country}</h4>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPlaceItem.propTypes = {\r\n  place: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React, { useContext } from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Places = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { places, loading } = weatherContext;\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='listitems'>\r\n        {places.map(place => (\r\n          <PlaceItem key={place.id} place={place} />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Places;\r\n","import React, { useContext, Fragment } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst About = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  return weatherContext.lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>\r\n        An application for searching weather in more than 134,000 cities in the\r\n        world.\r\n      </p>\r\n      <p>\r\n        Provides information on current weather, as well as a detailed forecast\r\n        for the next 48 hours and a forecast for 15 days.\r\n      </p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Aliaksandr Yalouskikh</a>.\r\n      </p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>О приложении</h2>\r\n      <p>Приложение для поиска погоды в более чем 134 000 городах мира.</p>\r\n      <p>\r\n        Предоставляет информацию по текущей погоде, а так же подробный прогноз\r\n        на ближайшие 48 часов и прогноз на 15 дней.\r\n      </p>\r\n      <p>\r\n        Сделал <a href='https://github.com/yalalex/'>Александр Еловских</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useContext, Fragment } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst NotFound = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  return weatherContext.lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>Not Found</h2>\r\n      <p className='lead'>The page you are looking for does not exist...</p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>Страница не найдена</h2>\r\n      <p className='lead'>Страница, которую вы ищете, не существует...</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_PLACES:\r\n      return {\r\n        ...state,\r\n        places: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        places: []\r\n      };\r\n    case SELECT_PLACE:\r\n      return {\r\n        ...state,\r\n        place: action.payload\r\n      };\r\n    case GET_CURRENT_WEATHER:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case GET_TODAY_WEATHER:\r\n      return {\r\n        ...state,\r\n        forecastToday: action.payload\r\n      };\r\n    case GET_FORECAST:\r\n      return {\r\n        ...state,\r\n        forecast15: action.payload,\r\n        loading: false\r\n      };\r\n    case SWITCH_LANG:\r\n      return {\r\n        ...state,\r\n        lang: action.payload === 'en' ? 'ru' : 'en'\r\n      };\r\n    case SWITCH_UNITS:\r\n      return {\r\n        ...state,\r\n        units: action.payload === 'metric' ? 'imperial' : 'metric'\r\n      };\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: action.payload\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: null,\r\n        loading: false\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_PLACES = 'SEARCH_PLACES';\r\nexport const SELECT_PLACE = 'SELECT_PLACE';\r\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const GET_CURRENT_WEATHER = 'GET_CURRENT_WEATHER';\r\nexport const GET_TODAY_WEATHER = 'GET_TODAY_WEATHER';\r\nexport const GET_FORECAST = 'GET_FORECAST';\r\nexport const SWITCH_LANG = 'SWITCH_LANG';\r\nexport const SWITCH_UNITS = 'SWITCH_UNITS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport WeatherContext from './weatherContext';\r\nimport WeatherReducer from './weatherReducer';\r\nimport {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../types';\r\n\r\nconst WeatherState = props => {\r\n  const initialState = {\r\n    units: 'metric',\r\n    lang: 'en',\r\n    loading: false,\r\n    alert: null,\r\n    places: [],\r\n    place: null,\r\n    current: {},\r\n    forecastToday: [],\r\n    forecast15: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(WeatherReducer, initialState);\r\n\r\n  //Set alert\r\n  const setAlert = (msg, type) => {\r\n    dispatch({ type: SET_ALERT, payload: { msg, type } });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n  };\r\n\r\n  //Search places to get weather for\r\n  const searchPlaces = async text => {\r\n    setLoading();\r\n    const config = {\r\n      headers: {\r\n        'x-rapidapi-host': 'wft-geo-db.p.rapidapi.com',\r\n        'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\r\n      }\r\n    };\r\n    const res = await axios.get(\r\n      `https://wft-geo-db.p.rapidapi.com/v1/geo/cities?limit=10&namePrefix=${text}&sort=-population&languageCode=${state.lang}`,\r\n      config\r\n    );\r\n    if (res.data.data.length === 0) {\r\n      const alert =\r\n        state.lang === 'en'\r\n          ? 'No cities found. Check the spelling and try again'\r\n          : 'Ничего не найдено. Проверьте правильность написания и попробуйте снова';\r\n      dispatch({ type: SET_ALERT, payload: alert });\r\n      setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\r\n    } else {\r\n      dispatch({ type: SEARCH_PLACES, payload: res.data.data });\r\n    }\r\n  };\r\n\r\n  //Select place in search and get weather for it\r\n  const selectPlace = place => {\r\n    dispatch({ type: SELECT_PLACE, payload: place });\r\n  };\r\n\r\n  //Get current weather and 48-hr/15-day forecast\r\n  const getWeather = async (place, units) => {\r\n    setLoading();\r\n    const { city, latitude, longitude } = place;\r\n    //Get current weather\r\n    const respo = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n    );\r\n    const { timezone, dt, main, wind, weather, sys } = respo.data,\r\n      { temp, pressure, humidity } = main,\r\n      { sunrise, sunset } = sys;\r\n    const current = {\r\n      name: city,\r\n      timezone,\r\n      dt,\r\n      temp,\r\n      wind: wind.speed,\r\n      pressure,\r\n      humidity,\r\n      weather: weather[0].main,\r\n      sky: weather[0].description,\r\n      icon: weather[0].icon,\r\n      sunrise,\r\n      sunset\r\n    };\r\n    if (current.temp.toFixed() === '-0') current.temp = 0;\r\n    dispatch({ type: GET_CURRENT_WEATHER, payload: current });\r\n    //Get forecast for 48 hours\r\n    const resp = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n    );\r\n    const today = resp.data.list.slice(0, 15);\r\n    today.map(period => {\r\n      if (period.main.temp.toFixed() === '-0') period.main.temp = 0;\r\n      //Change icons according to local time in requested place\r\n      if (sunrise + 86400 < period.dt && period.dt < sunset + 86400) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n      } else if (sunset < period.dt && period.dt < sunrise + 86400) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n      } else if (sunrise < period.dt && period.dt < sunset) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n      } else if (sunset - 86400 < period.dt && period.dt < sunrise) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n      }\r\n      return period;\r\n    });\r\n    dispatch({ type: GET_TODAY_WEATHER, payload: today });\r\n    //Get forecast for 15 days\r\n    const un = units === 'metric' ? 'M' : 'I';\r\n    const res = await axios.get(\r\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${latitude}&lon=${longitude}&units=${un}&key=${process.env.REACT_APP_WEATHERBIT_KEY}`\r\n    );\r\n    const forecast15 = res.data.data.slice(1, 16);\r\n    forecast15.map(day => {\r\n      if (day.max_temp.toFixed() === '-0') day.max_temp = 0;\r\n      if (day.min_temp.toFixed() === '-0') day.min_temp = 0;\r\n      return day;\r\n    });\r\n    dispatch({ type: GET_FORECAST, payload: forecast15 });\r\n  };\r\n\r\n  //Switch language\r\n  const switchLang = lang => dispatch({ type: SWITCH_LANG, payload: lang });\r\n\r\n  // Switch units\r\n  const switchUnits = units => dispatch({ type: SWITCH_UNITS, payload: units });\r\n\r\n  //Clear search\r\n  const clearSearch = () => dispatch({ type: CLEAR_SEARCH });\r\n\r\n  //Set loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        units: state.units,\r\n        lang: state.lang,\r\n        loading: state.loading,\r\n        alert: state.alert,\r\n        places: state.places,\r\n        place: state.place,\r\n        current: state.current,\r\n        forecastToday: state.forecastToday,\r\n        forecast15: state.forecast15,\r\n        searchPlaces,\r\n        clearSearch,\r\n        setAlert,\r\n        selectPlace,\r\n        getWeather,\r\n        switchUnits,\r\n        switchLang\r\n      }}\r\n    >\r\n      {props.children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport './App.css';\nimport WeatherState from './context/weather/WeatherState';\n\nconst App = () => {\n  return (\n    <WeatherState>\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <div className='container'>\n            <Alert />\n            <Route path='/weather-app' component={Search} />\n            <Switch>\n              <Route exact path='/weather-app' component={Places} />\n              <Route\n                exact\n                path='/weather-app/current/:name'\n                component={Forecast}\n              />\n              <Route exact path='/weather-app/about' component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </WeatherState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'moment/locale/ru';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}