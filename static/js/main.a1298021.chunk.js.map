{"version":3,"sources":["components/layout/spinner.gif","context/weather/weatherContext.js","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","components/pages/NotFound.js","context/weather/weatherReducer.js","context/types.js","context/weather/WeatherState.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","weatherContext","createContext","Navbar","useContext","WeatherContext","units","lang","switchLang","switchUnits","react_default","a","createElement","className","react_router_dom","to","onClick","Alert","alert","concat","type","msg","Search","_ref","history","location","searchPlaces","clearSearch","setAlert","places","_useState","useState","_useState2","Object","slicedToArray","text","setText","useEffect","push","onSubmit","e","preventDefault","name","value","placeholder","onChange","target","length","pathname","PeriodItem","period","offset","dt","main","weather","time","dist_default","locale","unix","format","alt","description","src","icon","style","width","temp","toFixed","DayItem","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","react","Spinner","spinner","margin","display","Forecast","current","forecastToday","forecast15","getWeather","loading","btn","setBtn","_useState3","_useState4","setTarget","switchButton","timezone","sky","wind","pressure","humidity","Date","getTimezoneOffset","layout_Spinner","switchTarget","react_router","exact","path","render","props","map","weather_PeriodItem","key","weather_DayItem","PlaceItem","place","selectPlace","fixZero","setTemp","setSky","_useState5","_useState6","setIcon","getPlaceWeather","_ref2","asyncToGenerator","regenerator_default","mark","_callee","latitude","longitude","res","_res$data","wrap","_context","prev","next","axios","get","process","sent","data","stop","apply","this","arguments","city","regionCode","country","Places","places_PlaceItem","id","About","href","NotFound","weatherReducer","state","action","objectSpread","payload","WeatherState","_useReducer","useReducer","WeatherReducer","_useReducer2","dispatch","setLoading","request","query","limit","namePrefix","sort","languageCode","set","then","body","catch","err","console","log","_x","setTimeout","_callee2","_context2","_x2","_ref3","_callee5","_state$place","respo","_respo$data","sys","sunrise","sunset","resp","today","un","_context5","speed","list","slice","_ref4","_callee3","_context3","_x3","_ref5","_callee4","_context4","_x4","weather_weatherContext","Provider","children","App","weather_WeatherState","layout_Navbar","layout_Alert","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a1298021.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import { createContext } from 'react';\r\n\r\nconst weatherContext = createContext();\r\n\r\nexport default weatherContext;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Navbar = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  const { units, lang, switchLang, switchUnits } = weatherContext;\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className='fas fa-cloud-sun-rain' /> Weather app\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>{lang === 'en' ? 'Search' : 'Поиск'}</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>\r\n            {lang === 'en' ? 'About' : 'Инфо'}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {units === 'metric' ? '°C' : '°F'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={switchUnits}>{units === 'metric' ? '°F' : '°C'}</li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {lang === 'en' ? 'EN' : 'RU'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={switchLang}>{lang === 'en' ? 'RU' : 'EN'}</li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Alert = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { alert } = weatherContext;\r\n\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>\r\n        <i className='fas fa-info-circle' /> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Search = ({ history, location }) => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { searchPlaces, clearSearch, setAlert, lang, places } = weatherContext;\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    history.push('/weather-app');\r\n    //eslint-disable-next-line\r\n  }, [places]);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      const alert =\r\n        lang === 'en'\r\n          ? 'Please enter something'\r\n          : 'Пожалуйста, введите что-нибудь';\r\n      setAlert(alert, 'dark');\r\n    } else {\r\n      searchPlaces(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  const onChange = e => setText(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          value={text}\r\n          placeholder={\r\n            lang === 'en'\r\n              ? 'Enter City Name...'\r\n              : 'Введите название города на русском языке...'\r\n          }\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value={lang === 'en' ? 'Search' : 'Поиск'}\r\n          className='btn btn-dark btn-block'\r\n        />\r\n      </form>\r\n      {places.length > 0 && location.pathname === '/weather-app' && (\r\n        <button className='btn btn-grey btn-block my-1' onClick={clearSearch}>\r\n          {lang === 'en' ? 'Clear' : 'Очистить'}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period, offset, lang }) => {\r\n  const { dt, main, weather } = period,\r\n    time = dt + offset;\r\n  return (\r\n    <div className='weatheritem'>\r\n      <h3>\r\n        <Moment locale={lang} unix format='ddd LT'>\r\n          {time}\r\n        </Moment>\r\n      </h3>\r\n      <img\r\n        alt={weather[0].description}\r\n        src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n        style={{ width: '100px' }}\r\n      />\r\n      <h1>{main.temp.toFixed()}°</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React, { Fragment } from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day, lang, units }) => {\r\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day;\r\n  return (\r\n    <Fragment>\r\n      <div className='weatheritem'>\r\n        <h3>\r\n          <Moment locale={lang} unix format='dd Do'>\r\n            {ts}\r\n          </Moment>\r\n        </h3>\r\n        <img\r\n          alt={weather.description}\r\n          src={`https://www.weatherbit.io/static/img/icons/${weather.icon}.png`}\r\n          style={{ width: '70px' }}\r\n        />\r\n        <h2>\r\n          {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n        </h2>\r\n        <div className='conditions'>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <i className='fas fa-umbrella' />\r\n                {pop}%\r\n              </li>\r\n              <li>\r\n                <i className='fas fa-water' />\r\n                {rh}%\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <i className='fas fa-wind' />\r\n                {wind_spd.toFixed(1)}\r\n                {lang === 'en'\r\n                  ? units === 'metric'\r\n                    ? 'm/s'\r\n                    : 'mph'\r\n                  : units === 'metric'\r\n                  ? 'м/c'\r\n                  : 'м/ч'}\r\n              </li>\r\n              <li>\r\n                <i className='fas fa-square' />\r\n                {pres.toFixed()}\r\n                {lang === 'en' ? 'mb' : 'мб'}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\nimport Moment from 'react-moment';\r\n\r\nconst Forecast = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    current,\r\n    forecastToday,\r\n    forecast15,\r\n    getWeather,\r\n    loading,\r\n    units,\r\n    lang\r\n  } = weatherContext;\r\n\r\n  const [btn, setBtn] = useState('');\r\n  const [target, setTarget] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (lang === 'en') {\r\n      setBtn('15-day forecast');\r\n      setTarget('15-day');\r\n    } else {\r\n      setBtn('Прогноз на 15 дней');\r\n      setTarget('15-day');\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    switchButton();\r\n    //eslint-disable-next-line\r\n  }, [lang, target]);\r\n\r\n  useEffect(() => {\r\n    getWeather();\r\n    //eslint-disable-next-line\r\n  }, [units]);\r\n\r\n  const switchTarget = target => {\r\n    if (target === '15-day') {\r\n      setTarget('current');\r\n    } else {\r\n      setTarget('15-day');\r\n    }\r\n  };\r\n\r\n  const switchButton = () => {\r\n    target === '15-day'\r\n      ? lang === 'en'\r\n        ? setBtn('15-day forecast')\r\n        : setBtn('Прогноз на 15 дней')\r\n      : lang === 'en'\r\n      ? setBtn('48-hr forecast')\r\n      : setBtn('Прогноз на 48 часов');\r\n  };\r\n\r\n  const {\r\n      name,\r\n      timezone,\r\n      dt,\r\n      weather,\r\n      sky,\r\n      wind,\r\n      temp,\r\n      pressure,\r\n      humidity,\r\n      icon\r\n    } = current,\r\n    offset = new Date().getTimezoneOffset() * 60 + timezone,\r\n    time = dt + offset;\r\n  if (forecastToday.length === 0) return null;\r\n  else if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <Router>\r\n        <Fragment>\r\n          <div className='card grid-2'>\r\n            <div className='card grid-2'>\r\n              <div className='all-center'>\r\n                <img\r\n                  alt={sky}\r\n                  src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                  style={{ width: '150px' }}\r\n                />\r\n              </div>\r\n              <div style={{ margin: 'auto 0' }}>\r\n                <h1>{temp.toFixed()}°</h1>\r\n                <h3>\r\n                  {forecast15[0].max_temp.toFixed()}°/\r\n                  {forecast15[0].min_temp.toFixed()}°\r\n                </h3>\r\n                <h2>{name}</h2>\r\n                <h4>\r\n                  <Moment locale={lang} unix format='LT'>\r\n                    {time}\r\n                  </Moment>\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div style={{ margin: 'auto 0' }}>\r\n              <ul>\r\n                <li>\r\n                  <h3>{lang === 'en' ? weather : 'Текущие условия:'}</h3>\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-water' />{' '}\r\n                  {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n                  {humidity}%\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-wind' />{' '}\r\n                  {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n                  {wind.toFixed(1)}{' '}\r\n                  {lang === 'en'\r\n                    ? units === 'metric'\r\n                      ? 'm/s'\r\n                      : 'mph'\r\n                    : units === 'metric'\r\n                    ? 'м/c'\r\n                    : 'м/ч'}\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-square' />{' '}\r\n                  {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n                  {pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n                </li>\r\n              </ul>\r\n              <Link\r\n                to={`/weather-app/${target}/${name}`}\r\n                className='btn btn-dark btn-sm my-1'\r\n                onClick={() => switchTarget(target)}\r\n              >\r\n                {btn}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/weather-app/current/:name'\r\n              render={props => (\r\n                <div className='listitems'>\r\n                  {forecastToday.map(period => (\r\n                    <PeriodItem\r\n                      key={period.dt}\r\n                      period={period}\r\n                      offset={offset}\r\n                      lang={lang}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path='/weather-app/15-day/:name'\r\n              render={props => (\r\n                <div className='listitems'>\r\n                  {forecast15.map(day => (\r\n                    <DayItem key={day.ts} day={day} lang={lang} units={units} />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    );\r\n};\r\n\r\nexport default Forecast;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlaceItem = ({ place }) => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  const { units, selectPlace, fixZero } = weatherContext;\r\n\r\n  const [temp, setTemp] = useState('');\r\n  const [sky, setSky] = useState('');\r\n  const [icon, setIcon] = useState('');\r\n\r\n  useEffect(() => {\r\n    getPlaceWeather();\r\n    //eslint-disable-next-line\r\n  }, [units]);\r\n\r\n  const getPlaceWeather = async () => {\r\n    const { latitude, longitude } = place;\r\n    const res = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n    );\r\n    const { main, weather } = res.data;\r\n    main.temp = fixZero(main.temp);\r\n    setTemp(main.temp.toFixed());\r\n    setSky(weather[0].description);\r\n    setIcon(weather[0].icon);\r\n  };\r\n\r\n  const { city, regionCode, country } = place;\r\n  return (\r\n    <Link\r\n      to={`/weather-app/current/${city}`}\r\n      onClick={() => selectPlace(place)}\r\n    >\r\n      <div className='placeitem'>\r\n        <h1>{temp}°</h1>\r\n        <img\r\n          alt={sky}\r\n          src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          style={{ width: '100px' }}\r\n        />\r\n        <div className='all-center'>\r\n          <h3>\r\n            {city}, {regionCode}\r\n          </h3>\r\n          <h4>{country}</h4>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPlaceItem.propTypes = {\r\n  place: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React, { useContext } from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Places = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { places, loading } = weatherContext;\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='listitems'>\r\n        {places.map(place => (\r\n          <PlaceItem key={place.id} place={place} />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Places;\r\n","import React, { useContext, Fragment } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst About = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  return weatherContext.lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>\r\n        An application for finding weather in more than 134,000 cities in the\r\n        world.\r\n      </p>\r\n      <p>\r\n        Provides information on current weather, as well as a detailed forecast\r\n        for the next 48 hours and a forecast for 15 days.\r\n      </p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>О приложении</h2>\r\n      <p>Приложение для поиска погоды в более чем 134 000 городах мира.</p>\r\n      <p>\r\n        Предоставляет информацию по текущей погоде, а так же подробный прогноз\r\n        на ближайшие 48 часов и прогноз на 15 дней.\r\n      </p>\r\n      <p>\r\n        Сделал <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useContext, Fragment } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst NotFound = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  return weatherContext.lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>Not Found</h2>\r\n      <p className='lead'>The page you are looking for does not exist...</p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>Страница не найдена</h2>\r\n      <p className='lead'>Страница, которую вы ищете, не существует...</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_PLACES:\r\n      return {\r\n        ...state,\r\n        places: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        places: []\r\n      };\r\n    case SELECT_PLACE:\r\n      return {\r\n        ...state,\r\n        place: action.payload\r\n      };\r\n    case GET_CURRENT_WEATHER:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n        // loading: false\r\n      };\r\n    case GET_TODAY_WEATHER:\r\n      return {\r\n        ...state,\r\n        forecastToday: action.payload\r\n        // loading: false\r\n      };\r\n    case GET_FORECAST:\r\n      return {\r\n        ...state,\r\n        forecast15: action.payload,\r\n        loading: false\r\n      };\r\n    case SWITCH_LANG:\r\n      return {\r\n        ...state,\r\n        lang: action.payload\r\n      };\r\n    case SWITCH_UNITS:\r\n      return {\r\n        ...state,\r\n        units: action.payload\r\n      };\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: action.payload,\r\n        loading: false\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: null\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_PLACES = 'SEARCH_PLACES';\r\nexport const SELECT_PLACE = 'SELECT_PLACE';\r\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const GET_CURRENT_WEATHER = 'GET_CURRENT_WEATHER';\r\nexport const GET_TODAY_WEATHER = 'GET_TODAY_WEATHER';\r\nexport const GET_FORECAST = 'GET_FORECAST';\r\nexport const SWITCH_LANG = 'SWITCH_LANG';\r\nexport const SWITCH_UNITS = 'SWITCH_UNITS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\n","import React, { useReducer } from 'react';\r\nimport request from 'superagent';\r\nimport axios from 'axios';\r\nimport WeatherContext from './weatherContext';\r\nimport WeatherReducer from './weatherReducer';\r\nimport {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../types';\r\n\r\nconst WeatherState = props => {\r\n  const initialState = {\r\n    units: 'metric',\r\n    lang: 'en',\r\n    loading: false,\r\n    alert: null,\r\n    places: [],\r\n    place: null,\r\n    current: {},\r\n    forecastToday: [],\r\n    forecast15: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(WeatherReducer, initialState);\r\n\r\n  //Search places to get weather for\r\n  const searchPlaces = async text => {\r\n    setLoading();\r\n    request\r\n      .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\r\n      .query({ limit: '10' })\r\n      .query({ namePrefix: text })\r\n      .query({ sort: '-population' })\r\n      .query({ languageCode: state.lang })\r\n      .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\r\n      .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\r\n      .set('Accept', 'application/json')\r\n      .then(res => {\r\n        if (res.body.data.length === 0) {\r\n          const alert =\r\n            state.lang === 'en'\r\n              ? 'No cities found. Check the spelling and try again'\r\n              : 'Ничего не найдено. Проверьте правильность написания и попробуйте снова';\r\n          setAlert(alert, 'dark');\r\n        } else {\r\n          dispatch({ type: SEARCH_PLACES, payload: res.body.data });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Set alert\r\n  const setAlert = (msg, type) => {\r\n    dispatch({ type: SET_ALERT, payload: { msg, type } });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n  };\r\n\r\n  //Select place in search and get weather for it\r\n  const selectPlace = async place => {\r\n    dispatch({ type: SELECT_PLACE, payload: place });\r\n  };\r\n\r\n  //Negative zero temperature fix\r\n  const fixZero = temp => {\r\n    if (temp.toFixed() === '-0') {\r\n      temp = 0;\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  //Get current weather and 48-hr/15-day forecast\r\n  const getWeather = async () => {\r\n    setLoading();\r\n    const { units } = state,\r\n      { city, latitude, longitude } = state.place;\r\n    //Get current weather\r\n    const respo = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n    );\r\n    const { timezone, dt, main, wind, weather, sys } = respo.data,\r\n      { temp, pressure, humidity } = main,\r\n      { sunrise, sunset } = sys;\r\n    const current = {\r\n      name: city,\r\n      timezone,\r\n      dt,\r\n      temp: temp,\r\n      wind: wind.speed,\r\n      pressure,\r\n      humidity,\r\n      weather: weather[0].main,\r\n      sky: weather[0].description,\r\n      icon: weather[0].icon,\r\n      sunrise,\r\n      sunset\r\n    };\r\n    current.temp = fixZero(current.temp);\r\n    dispatch({ type: GET_CURRENT_WEATHER, payload: current });\r\n    //Get forecast for 48 hours\r\n    const resp = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n    );\r\n    const today = resp.data.list.slice(0, 15);\r\n    today.map(async period => {\r\n      period.main.temp = fixZero(period.main.temp);\r\n      //Change icons according to local time\r\n      if (sunrise + 86400 < period.dt && period.dt < sunset + 86400) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n      } else if (sunset < period.dt && period.dt < sunrise + 86400) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n      } else if (sunrise < period.dt && period.dt < sunset) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n      } else if (sunset - 86400 < period.dt && period.dt < sunrise) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n      }\r\n    });\r\n    dispatch({ type: GET_TODAY_WEATHER, payload: today });\r\n    //Get forecast for 15 days\r\n    const un = units === 'metric' ? 'M' : 'I';\r\n    const res = await axios.get(\r\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${latitude}&lon=${longitude}&units=${un}&key=${process.env.REACT_APP_WEATHERBIT_KEY}`\r\n    );\r\n    const forecast15 = res.data.data.slice(1, 16);\r\n    forecast15.map(async day => {\r\n      day.max_temp = fixZero(day.max_temp);\r\n      day.min_temp = fixZero(day.min_temp);\r\n    });\r\n    dispatch({ type: GET_FORECAST, payload: forecast15 });\r\n  };\r\n\r\n  //Switch language\r\n  const switchLang = () => {\r\n    state.lang === 'en'\r\n      ? dispatch({ type: SWITCH_LANG, payload: 'ru' })\r\n      : dispatch({ type: SWITCH_LANG, payload: 'en' });\r\n  };\r\n\r\n  // Switch units\r\n  const switchUnits = () => {\r\n    state.units === 'metric'\r\n      ? dispatch({ type: SWITCH_UNITS, payload: 'imperial' })\r\n      : dispatch({ type: SWITCH_UNITS, payload: 'metric' });\r\n  };\r\n\r\n  //Clear search\r\n  const clearSearch = () => dispatch({ type: CLEAR_SEARCH });\r\n\r\n  //Set loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        units: state.units,\r\n        lang: state.lang,\r\n        loading: state.loading,\r\n        alert: state.alert,\r\n        places: state.places,\r\n        place: state.place,\r\n        current: state.current,\r\n        forecastToday: state.forecastToday,\r\n        forecast15: state.forecast15,\r\n        searchPlaces,\r\n        clearSearch,\r\n        setAlert,\r\n        selectPlace,\r\n        getWeather,\r\n        switchUnits,\r\n        switchLang,\r\n        fixZero\r\n      }}\r\n    >\r\n      {props.children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport './App.css';\nimport WeatherState from './context/weather/WeatherState';\n\nconst App = () => {\n  return (\n    <WeatherState>\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <div className='container'>\n            <Alert />\n            <Route path='/weather-app' component={Search} />\n            <Switch>\n              <Route exact path='/weather-app' component={Places} />\n              <Route\n                exact\n                path='/weather-app/current/:name'\n                component={Forecast}\n              />\n              <Route exact path='/weather-app/about' component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </WeatherState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'moment/locale/ru';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}