{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_ref","units","lang","switchLang","switchUnits","react_default","a","createElement","className","react_router_dom","to","onClick","Alert","alert","concat","type","msg","Search","state","text","onSubmit","e","preventDefault","_this","props","setAlert","searchPlaces","setState","onChange","Object","defineProperty","target","name","value","this","placeholder","showClear","clearSearch","Component","PeriodItem","period","offset","dt","main","wind","weather","time","dist_default","locale","unix","format","alt","description","src","icon","width","temp","toFixed","humidity","speed","pressure","DayItem","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","Spinner","react","spinner","style","margin","display","Forecast","btn","_this2","_this$props","current","forecastToday","forecast16","loading","_this$state","timezone","sky","Date","getTimezoneOffset","length","layout_Spinner","padding","button24","button16","react_router","exact","path","render","map","weather_PeriodItem","key","weather_DayItem","PlaceItem","place","getForecast","city","regionCode","country","latitude","longitude","Places","places","places_PlaceItem","id","About","href","App","_callee","regenerator_default","wrap","_context","prev","next","request","get","query","limit","namePrefix","sort","languageCode","set","process","then","res","body","data","getPlaceWeather","console","log","catch","err","stop","places1","toConsumableArray","_ref2","asyncToGenerator","mark","_callee2","_context2","axios","sent","assign","_x2","apply","arguments","setTimeout","_callee4","lat","lon","respo","resp","today","_this$state$current","sunrise","sunset","un","_context4","sys","list","slice","_ref4","_callee3","_context3","_x6","switcher","loc","_this$state2","layout_Navbar","layout_Alert","Search_Search","places_Places","Forecast_Forecast","component","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1aaedc93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ units, lang, switchLang, switchUnits }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>Weather app</h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>{lang === 'en' ? 'Home' : 'На главную'}</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>\r\n            {lang === 'en' ? 'About' : 'О нас'}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to='#' onClick={switchUnits}>\r\n            {units === 'metric' ? '→°F' : '→°C'}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to='#' onClick={switchLang}>\r\n            {lang === 'en' ? '→RU' : '→EN'}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  units: PropTypes.string.isRequired,\r\n  switchUnits: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>{alert.msg}</div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Search extends Component {\r\n  state = {\r\n    text: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    searchPlaces: PropTypes.func.isRequired,\r\n    clearSearch: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired,\r\n    showClear: PropTypes.bool.isRequired\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.text === '') {\r\n      const alert =\r\n        this.props.lang === 'en'\r\n          ? 'Please enter something'\r\n          : 'Пожалуйста, введите что-нибудь';\r\n      this.props.setAlert(alert, 'dark');\r\n    } else {\r\n      this.props.searchPlaces(this.state.text);\r\n      this.setState({ text: '' });\r\n    }\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} className='form'>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            value={this.state.text}\r\n            placeholder={\r\n              this.props.lang === 'en'\r\n                ? 'Enter City Name...'\r\n                : 'Введите название городана русском языке...'\r\n            }\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value={this.props.lang === 'en' ? 'Search' : 'Поиск'}\r\n            className='btn btn-dark btn-block'\r\n          />\r\n        </form>\r\n        {this.props.showClear && (\r\n          <button\r\n            className='btn btn-grey btn-block'\r\n            onClick={this.props.clearSearch}\r\n          >\r\n            {this.props.lang === 'en' ? 'Clear' : 'Очистить'}\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period, offset, lang }) => {\r\n  const { dt, main, wind, weather } = period,\r\n    time = dt + offset;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment locale={lang} unix format='LT'>\r\n              {time}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather[0].description}\r\n            src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n            width='100'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>{main.temp.toFixed()}°</h2>\r\n        </li>\r\n        {/* <li>Precipitation: {rain}%</li> */}\r\n        <li>\r\n          {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n          {main.humidity}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n          {wind.speed.toFixed(1)} {lang === 'en' ? 'm/s: ' : 'м/с'}\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n          {main.pressure.toFixed()} {lang === 'en' ? 'mbar: ' : 'мбар'}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day, lang }) => {\r\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment locale={lang} unix format='ddd Do'>\r\n              {ts}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather.description}\r\n            src={`https://www.weatherbit.io/static/img/icons/${\r\n              weather.icon\r\n            }.png`}\r\n            width='70'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>\r\n            {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n          </h2>\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Precipitation: ' : 'Осадки: '}\r\n          {pop}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n          {rh}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n          {wind_spd.toFixed(1)} {lang === 'en' ? 'm/s: ' : 'м/с'}\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n          {pres.toFixed()} {lang === 'en' ? 'mbar: ' : 'мбар'}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\n\r\nexport default class Forecast extends Component {\r\n  state = {\r\n    btn: '',\r\n    target: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    forecastToday: PropTypes.array.isRequired,\r\n    forecast16: PropTypes.array.isRequired,\r\n    current: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.lang === 'en'\r\n      ? this.setState({ btn: '16-day forecast', target: '16-day' })\r\n      : this.setState({ btn: 'Прогноз на 16 дней', target: '16-day' });\r\n    // : this.props.lang === 'en'\r\n    // ? this.setState({ btn: '24-hr forecast', target: 'current' })\r\n    // : this.setState({ btn: 'Прогноз на 24 часа', target: 'current' });\r\n  }\r\n\r\n  render() {\r\n    const { current, forecastToday, forecast16, loading, lang } = this.props,\r\n      { btn, target } = this.state,\r\n      {\r\n        name,\r\n        timezone,\r\n        dt,\r\n        weather,\r\n        sky,\r\n        wind,\r\n        temp,\r\n        pressure,\r\n        humidity,\r\n        icon\r\n      } = current,\r\n      offset = new Date().getTimezoneOffset() * 60 + timezone,\r\n      time = dt + offset;\r\n    if (forecastToday.length === 0) return null;\r\n    else if (loading) {\r\n      return <Spinner />;\r\n    } else\r\n      return (\r\n        <Router>\r\n          <Fragment>\r\n            <div className='card grid-2'>\r\n              <div className='card grid-2' style={{ padding: '0' }}>\r\n                <div className='all-center'>\r\n                  <img\r\n                    alt={sky}\r\n                    src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                    width='150'\r\n                  />\r\n                </div>\r\n                <div style={{ margin: 'auto 0' }}>\r\n                  <h1>{temp}°</h1>\r\n                  <h2>{name}</h2>\r\n                  <h3>\r\n                    <Moment locale={lang} unix format='LT'>\r\n                      {time}\r\n                    </Moment>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div style={{ padding: '0.7rem 0' }}>\r\n                <ul>\r\n                  <li>\r\n                    <h3>{weather}</h3>\r\n                  </li>\r\n                  <li>\r\n                    {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n                    {humidity}%\r\n                  </li>\r\n                  <li>\r\n                    {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n                    {wind.toFixed(1)} {lang === 'en' ? 'm/s: ' : 'м/с'}\r\n                  </li>\r\n                  <li>\r\n                    {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n                    {pressure.toFixed()} {lang === 'en' ? 'mbar: ' : 'мбар'}\r\n                  </li>\r\n                </ul>\r\n                <Link\r\n                  to={`/weather-app/${target}/${name}`}\r\n                  className='btn btn-dark btn-sm my-1'\r\n                  onClick={() => {\r\n                    const button24 =\r\n                        lang === 'en' ? '24-hr forecast' : 'Прогноз на 24 часа',\r\n                      button16 =\r\n                        lang === 'en'\r\n                          ? '16-day forecast'\r\n                          : 'Прогноз на 16 дней';\r\n                    target === '16-day'\r\n                      ? this.setState({\r\n                          btn: button24,\r\n                          target: 'current'\r\n                        })\r\n                      : this.setState({\r\n                          btn: button16,\r\n                          target: '16-day'\r\n                        });\r\n                  }}\r\n                >\r\n                  {btn}\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/weather-app/current/:name'\r\n                render={props => (\r\n                  <div className='grid-3'>\r\n                    {forecastToday.map(period => (\r\n                      <PeriodItem\r\n                        key={period.dt}\r\n                        period={period}\r\n                        offset={offset}\r\n                        lang={lang}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path='/weather-app/16-day/:name'\r\n                render={props => (\r\n                  <div className='grid-4'>\r\n                    {forecast16.map(day => (\r\n                      <DayItem key={day.ts} day={day} lang={lang} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n            </Switch>\r\n          </Fragment>\r\n        </Router>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlaceItem = ({ place, getForecast }) => {\r\n  const {\r\n    city,\r\n    regionCode,\r\n    country,\r\n    latitude,\r\n    longitude,\r\n    temp,\r\n    sky,\r\n    icon\r\n  } = place;\r\n  return (\r\n    <div className='card text-center'>\r\n      <h1>{temp}°</h1>\r\n      <img\r\n        alt={sky}\r\n        src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        width='100'\r\n      />\r\n      <h3>\r\n        {city}, {regionCode}\r\n      </h3>\r\n      <h4>{country}</h4>\r\n      <div>\r\n        <Link\r\n          to={`/weather-app/current/${city}`}\r\n          className='btn btn-dark btn-sm my-1'\r\n          onClick={() => getForecast(city, latitude, longitude)}\r\n        >\r\n          Select\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlaceItem.propTypes = {\r\n  place: PropTypes.object.isRequired,\r\n  getForecast: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Places = ({ places, loading, getForecast }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='grid-3'>\r\n        {places.map(place => (\r\n          <PlaceItem key={place.id} place={place} getForecast={getForecast} />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nPlaces.propTypes = {\r\n  places: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  getForecast: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Places;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>App to get current weather and 16-day forecast.</p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport './App.css';\nimport request from 'superagent';\nimport axios from 'axios';\n\nexport default class App extends Component {\n  state = {\n    units: 'metric',\n    lang: 'en',\n    loading: false,\n    alert: null,\n    places: [],\n    place: null,\n    current: {},\n    forecastToday: [],\n    forecast16: []\n  };\n\n  //Search places to get weather for\n  searchPlaces = async text => {\n    this.setState({ loading: true });\n    request\n      .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\n      .query({ limit: '10' })\n      .query({ namePrefix: text })\n      .query({ sort: '-population' })\n      .query({ languageCode: this.state.lang })\n      .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\n      .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\n      .set('Accept', 'application/json')\n      .then(res => {\n        this.setState({ places: res.body.data, loading: false });\n        this.getPlaceWeather();\n        console.log(this.state.places);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //Get weather for search request\n  getPlaceWeather = () => {\n    const { units, places } = this.state;\n    const places1 = [...places];\n    places1.map(async place => {\n      let { latitude, longitude } = place;\n      let res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${\n          process.env.REACT_APP_OPENWEATHER_KEY\n        }`\n      );\n      Object.assign(place, {\n        temp: res.data.main.temp.toFixed(),\n        sky: res.data.weather[0].description,\n        icon: res.data.weather[0].icon\n      });\n      this.setState({ places: places1 });\n    });\n  };\n\n  //Clear search\n  clearSearch = () => this.setState({ places: [], loading: false });\n\n  //Set alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n    setTimeout(() => this.setState({ alert: null }), 3000);\n  };\n\n  //Get current weather and 24-hr/16-day forecast\n  getForecast = async (name, lat, lon) => {\n    const { units } = this.state;\n    this.setState({ loading: true });\n    const respo = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    this.setState({\n      current: {\n        name,\n        timezone: respo.data.timezone,\n        dt: respo.data.dt,\n        temp: respo.data.main.temp.toFixed(),\n        wind: respo.data.wind.speed,\n        pressure: respo.data.main.pressure,\n        humidity: respo.data.main.humidity,\n        weather: respo.data.weather[0].main,\n        sky: respo.data.weather[0].description,\n        icon: respo.data.weather[0].icon,\n        sunrise: respo.data.sys.sunrise,\n        sunset: respo.data.sys.sunset\n      }\n    });\n    const resp = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    const today = resp.data.list.slice(0, 9);\n    const { sunrise, sunset } = this.state.current;\n    today.map(async period => {\n      //Change icons according to local time\n      if (sunset < period.dt && period.dt < sunrise + 86400) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\n      } else if (sunrise < period.dt && period.dt < sunset) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\n      } else if (sunset - 86400 < period.dt && period.dt < sunrise) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\n      }\n    });\n    this.setState({\n      forecastToday: today\n    });\n    const un = units === 'metric' ? 'M' : 'I';\n    const res = await axios.get(\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${lat}&lon=${lon}&units=${un}&key=${\n        process.env.REACT_APP_WEATHERBIT_KEY\n      }`\n    );\n    this.setState({\n      forecast16: res.data.data,\n      loading: false,\n      place: { name, lat, lon }\n    });\n    console.log(this.state.forecastToday);\n    console.log(this.state.forecast16);\n    console.log(this.state.current);\n    console.log(this.state.place);\n  };\n\n  //Switch language\n  switchLang = () => {\n    this.state.lang === 'en'\n      ? this.setState({ lang: 'ru' })\n      : this.setState({ lang: 'en' });\n  };\n\n  // Switch units\n  switchUnits = () => {\n    this.state.units === 'metric'\n      ? this.switcher('imperial')\n      : this.switcher('metric');\n  };\n\n  // Update state after units switch\n  switcher = (units, loc) => {\n    const { place } = this.state;\n    if (place !== null) {\n      this.setState(\n        () => {\n          return { units, loc };\n        },\n        () => this.getForecast(place.name, place.lat, place.lon)\n      );\n    } else {\n      this.setState({ units, loc });\n      this.clearSearch();\n    }\n  };\n  // switcher = units => {\n  //   const { place, places } = this.state;\n  //   if (place !== null && places.length > 0) {\n  //     this.setState(\n  //       () => {\n  //         return { units };\n  //       },\n  //       () => this.getForecast(place.name, place.lat, place.lon)\n  //     );\n  //     this.clearSearch();\n  //   } else if (place === null && places.length > 0) {\n  //     this.setState(\n  //       () => {\n  //         return { units };\n  //       },\n  //       () => this.getPlaceWeather()\n  //     );\n  //   } else this.setState({ units });\n  // };\n\n  render() {\n    const {\n      places,\n      // place,\n      loading,\n      alert,\n      units,\n      lang,\n      current,\n      forecastToday,\n      forecast16\n    } = this.state;\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar\n            switchUnits={this.switchUnits}\n            units={units}\n            switchLang={this.switchLang}\n            lang={lang}\n          />\n          <div className='container'>\n            <Alert alert={alert} lang={lang} />\n            <Switch>\n              <Route\n                exact\n                path='/weather-app'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchPlaces={this.searchPlaces}\n                      clearSearch={this.clearSearch}\n                      showClear={places.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                      lang={lang}\n                    />\n                    <Places\n                      places={places}\n                      loading={loading}\n                      getForecast={this.getForecast}\n                      lang={lang}\n                    />\n                  </Fragment>\n                )}\n              />\n              <Route\n                exact\n                path='/weather-app/current/:name'\n                render={props => (\n                  <Forecast\n                    current={current}\n                    forecastToday={forecastToday}\n                    forecast16={forecast16}\n                    loading={loading}\n                    lang={lang}\n                  />\n                )}\n              />\n              <Route exact path='/weather-app/about' component={About} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'moment/locale/ru';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}