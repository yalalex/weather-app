{"version":3,"sources":["components/layout/spinner.gif","context/weather/weatherContext.js","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","components/pages/NotFound.js","context/weather/weatherReducer.js","context/types.js","context/weather/WeatherState.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","weatherContext","createContext","Navbar","useContext","WeatherContext","units","lang","switchLang","switchUnits","react_default","a","createElement","className","react_router_dom","to","onClick","Alert","alert","concat","type","msg","Search","_ref","history","searchPlaces","clearSearch","setAlert","places","_useState","useState","_useState2","Object","slicedToArray","text","setText","useEffect","push","onSubmit","e","preventDefault","name","value","placeholder","onChange","target","length","window","location","pathname","PeriodItem","period","offset","dt","main","weather","time","dist_default","locale","unix","format","alt","description","src","icon","style","width","temp","toFixed","DayItem","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","Spinner","react","spinner","margin","display","Forecast","current","forecastToday","forecast16","getWeather","loading","btn","setBtn","_useState3","_useState4","setTarget","switchButton","timezone","sky","wind","pressure","humidity","Date","getTimezoneOffset","layout_Spinner","padding","switchTarget","react_router","exact","path","render","props","map","weather_PeriodItem","key","weather_DayItem","PlaceItem","selectPlace","place","setTemp","setSky","_useState5","_useState6","setIcon","getPlaceWeather","_ref2","asyncToGenerator","regenerator_default","mark","_callee","latitude","longitude","res","_res$data","wrap","_context","prev","next","axios","get","process","sent","data","stop","apply","this","arguments","city","regionCode","country","Places","places_PlaceItem","id","About","href","NotFound","weatherReducer","state","action","objectSpread","payload","WeatherState","_useReducer","useReducer","WeatherReducer","_useReducer2","dispatch","setLoading","request","query","limit","namePrefix","sort","languageCode","set","then","body","catch","err","console","log","_x","setTimeout","_callee2","_context2","_x2","_ref3","_callee4","_state$place","respo","_respo$data","sys","sunrise","sunset","resp","today","un","_context4","speed","list","slice","_ref4","_callee3","_context3","_x3","weather_weatherContext","Provider","children","App","weather_WeatherState","layout_Navbar","layout_Alert","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.af515e4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import { createContext } from 'react';\r\n\r\nconst weatherContext = createContext();\r\n\r\nexport default weatherContext;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Navbar = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  const { units, lang, switchLang, switchUnits } = weatherContext;\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className='fas fa-cloud-sun-rain' /> Weather app\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>{lang === 'en' ? 'Search' : 'Поиск'}</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>\r\n            {lang === 'en' ? 'About' : 'Инфо'}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {units === 'metric' ? '°C' : '°F'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={switchUnits}>{units === 'metric' ? '°F' : '°C'}</li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {lang === 'en' ? 'EN' : 'RU'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={switchLang}>{lang === 'en' ? 'RU' : 'EN'}</li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Alert = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { alert } = weatherContext;\r\n\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>\r\n        <i className='fas fa-info-circle' /> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Search = ({ history }) => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { searchPlaces, clearSearch, setAlert, lang, places } = weatherContext;\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    history.push('/weather-app');\r\n    //eslint-disable-next-line\r\n  }, [places]);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      const alert =\r\n        lang === 'en'\r\n          ? 'Please enter something'\r\n          : 'Пожалуйста, введите что-нибудь';\r\n      setAlert(alert, 'dark');\r\n    } else {\r\n      searchPlaces(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  const onChange = e => setText(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          value={text}\r\n          placeholder={\r\n            lang === 'en'\r\n              ? 'Enter City Name...'\r\n              : 'Введите название города на русском языке...'\r\n          }\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value={lang === 'en' ? 'Search' : 'Поиск'}\r\n          className='btn btn-dark btn-block'\r\n        />\r\n      </form>\r\n      {places.length > 0 && window.location.pathname === '/weather-app' && (\r\n        <button className='btn btn-grey btn-block' onClick={clearSearch}>\r\n          {lang === 'en' ? 'Clear' : 'Очистить'}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period, offset, lang }) => {\r\n  const { dt, main, weather } = period,\r\n    time = dt + offset;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment locale={lang} unix format='ddd LT'>\r\n              {time}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather[0].description}\r\n            src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <h1>{main.temp.toFixed()}°</h1>\r\n        </li>\r\n        {/* <li>Precipitation: {rain}%</li> */}\r\n        {/* <li>\r\n          {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n          {main.humidity}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n          {wind.speed.toFixed(1)} {lang === 'en' ? 'm/s' : 'м/с'}\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n          {main.pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n        </li> */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day, lang }) => {\r\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment locale={lang} unix format='ddd Do'>\r\n              {ts}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather.description}\r\n            src={`https://www.weatherbit.io/static/img/icons/${\r\n              weather.icon\r\n            }.png`}\r\n            style={{ width: '70px' }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>\r\n            {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n          </h2>\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Precipitation: ' : 'Осадки: '}\r\n          {pop}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n          {rh}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n          {wind_spd.toFixed(1)} {lang === 'en' ? 'm/s' : 'м/с'}\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n          {pres.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\nimport Moment from 'react-moment';\r\n\r\nconst Forecast = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    current,\r\n    forecastToday,\r\n    forecast16,\r\n    getWeather,\r\n    loading,\r\n    units,\r\n    lang\r\n  } = weatherContext;\r\n\r\n  const [btn, setBtn] = useState('');\r\n  const [target, setTarget] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (lang === 'en') {\r\n      setBtn('16-day forecast');\r\n      setTarget('16-day');\r\n    } else {\r\n      setBtn('Прогноз на 16 дней');\r\n      setTarget('16-day');\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    switchButton();\r\n    //eslint-disable-next-line\r\n  }, [lang, target]);\r\n\r\n  useEffect(() => {\r\n    getWeather();\r\n    //eslint-disable-next-line\r\n  }, [units]);\r\n\r\n  const switchTarget = target => {\r\n    if (target === '16-day') {\r\n      setTarget('current');\r\n    } else {\r\n      setTarget('16-day');\r\n    }\r\n  };\r\n\r\n  const switchButton = () => {\r\n    target === '16-day'\r\n      ? lang === 'en'\r\n        ? setBtn('16-day forecast')\r\n        : setBtn('Прогноз на 16 дней')\r\n      : lang === 'en'\r\n      ? setBtn('30-hr forecast')\r\n      : setBtn('Прогноз на 30 часов');\r\n  };\r\n\r\n  const {\r\n      name,\r\n      timezone,\r\n      dt,\r\n      weather,\r\n      sky,\r\n      wind,\r\n      temp,\r\n      pressure,\r\n      humidity,\r\n      icon\r\n    } = current,\r\n    offset = new Date().getTimezoneOffset() * 60 + timezone,\r\n    time = dt + offset;\r\n  if (forecastToday.length === 0) return null;\r\n  else if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <Router>\r\n        <Fragment>\r\n          <div className='card grid-2'>\r\n            <div className='card grid-2' style={{ padding: '0' }}>\r\n              <div className='all-center'>\r\n                <img\r\n                  alt={sky}\r\n                  src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                  style={{ width: '150px' }}\r\n                />\r\n              </div>\r\n              <div style={{ margin: 'auto 0' }}>\r\n                <h1>{temp}°</h1>\r\n                <h2>{name}</h2>\r\n                <h3>\r\n                  <Moment locale={lang} unix format='LT'>\r\n                    {time}\r\n                  </Moment>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <div style={{ padding: '0.7rem 0' }}>\r\n              <ul>\r\n                <li>\r\n                  <h3>{lang === 'en' ? weather : 'Текущие условия:'}</h3>\r\n                </li>\r\n                <li>\r\n                  {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n                  {humidity}%\r\n                </li>\r\n                <li>\r\n                  {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n                  {wind.toFixed(1)} {lang === 'en' ? 'm/s' : 'м/с'}\r\n                </li>\r\n                <li>\r\n                  {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n                  {pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n                </li>\r\n              </ul>\r\n              <Link\r\n                to={`/weather-app/${target}/${name}`}\r\n                className='btn btn-dark btn-sm my-1'\r\n                onClick={() => switchTarget(target)}\r\n              >\r\n                {btn}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/weather-app/current/:name'\r\n              render={props => (\r\n                <div className='grid-5'>\r\n                  {forecastToday.map(period => (\r\n                    <PeriodItem\r\n                      key={period.dt}\r\n                      period={period}\r\n                      offset={offset}\r\n                      lang={lang}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path='/weather-app/16-day/:name'\r\n              render={props => (\r\n                <div className='grid-4'>\r\n                  {forecast16.map(day => (\r\n                    <DayItem key={day.ts} day={day} lang={lang} />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    );\r\n};\r\n\r\nexport default Forecast;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlaceItem = ({ selectPlace, place, lang, units }) => {\r\n  const [temp, setTemp] = useState('');\r\n  const [sky, setSky] = useState('');\r\n  const [icon, setIcon] = useState('');\r\n\r\n  useEffect(() => {\r\n    getPlaceWeather();\r\n    //eslint-disable-next-line\r\n  }, [units]);\r\n\r\n  const getPlaceWeather = async () => {\r\n    const { latitude, longitude } = place;\r\n    const res = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${\r\n        process.env.REACT_APP_OPENWEATHER_KEY\r\n      }`\r\n    );\r\n    const { main, weather } = res.data;\r\n    setTemp(main.temp.toFixed());\r\n    setSky(weather[0].description);\r\n    setIcon(weather[0].icon);\r\n  };\r\n\r\n  const { city, regionCode, country } = place;\r\n  return (\r\n    <div className='card text-center'>\r\n      <h1>{temp}°</h1>\r\n      <img\r\n        alt={sky}\r\n        src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        style={{ width: '100px' }}\r\n      />\r\n      <h3>\r\n        {city}, {regionCode}\r\n      </h3>\r\n      <h4>{country}</h4>\r\n      <div>\r\n        <Link\r\n          to={`/weather-app/current/${city}`}\r\n          className='btn btn-dark btn-sm my-1'\r\n          onClick={() => selectPlace(place)}\r\n        >\r\n          {lang === 'en' ? 'Select' : 'Выбрать'}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlaceItem.propTypes = {\r\n  place: PropTypes.object.isRequired,\r\n  selectPlace: PropTypes.func.isRequired,\r\n  lang: PropTypes.string.isRequired,\r\n  units: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React, { useContext } from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Places = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { places, selectPlace, loading, lang, units } = weatherContext;\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='grid-4'>\r\n        {places.map(place => (\r\n          <PlaceItem\r\n            key={place.id}\r\n            place={place}\r\n            selectPlace={selectPlace}\r\n            units={units}\r\n            lang={lang}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Places;\r\n","import React, { useContext, Fragment } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst About = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  return weatherContext.lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>\r\n        An application for finding weather in more than 134,000 cities in the\r\n        world.\r\n      </p>\r\n      <p>\r\n        Provides information on current weather, as well as a detailed forecast\r\n        for the next 30 hours and a forecast for 16 days.\r\n      </p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>О приложении</h2>\r\n      <p>Приложение для поиска погоды в более чем 134 000 городах мира.</p>\r\n      <p>\r\n        Предоставляет информацию по текущей погоде, а так же подробный прогноз\r\n        на ближайшие 30 часов и прогноз на 16 дней.\r\n      </p>\r\n      <p>\r\n        Сделал <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useContext, Fragment } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst NotFound = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  return weatherContext.lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>Not Found</h2>\r\n      <p className='lead'>The page you are looking for does not exist...</p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>Страница не найдена</h2>\r\n      <p className='lead'>Страница, которую вы ищете, не существует...</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_PLACES:\r\n      return {\r\n        ...state,\r\n        places: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        places: []\r\n      };\r\n    case SELECT_PLACE:\r\n      return {\r\n        ...state,\r\n        place: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_CURRENT_WEATHER:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_TODAY_WEATHER:\r\n      return {\r\n        ...state,\r\n        forecastToday: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_FORECAST:\r\n      return {\r\n        ...state,\r\n        forecast16: action.payload,\r\n        loading: false\r\n      };\r\n    case SWITCH_LANG:\r\n      return {\r\n        ...state,\r\n        lang: action.payload\r\n      };\r\n    case SWITCH_UNITS:\r\n      return {\r\n        ...state,\r\n        units: action.payload\r\n      };\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: action.payload,\r\n        loading: false\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: null\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_PLACES = 'SEARCH_PLACES';\r\nexport const SELECT_PLACE = 'SELECT_PLACE';\r\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const GET_CURRENT_WEATHER = 'GET_CURRENT_WEATHER';\r\nexport const GET_TODAY_WEATHER = 'GET_TODAY_WEATHER';\r\nexport const GET_FORECAST = 'GET_FORECAST';\r\nexport const SWITCH_LANG = 'SWITCH_LANG';\r\nexport const SWITCH_UNITS = 'SWITCH_UNITS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\n","import React, { useReducer } from 'react';\r\nimport request from 'superagent';\r\nimport axios from 'axios';\r\nimport WeatherContext from './weatherContext';\r\nimport WeatherReducer from './weatherReducer';\r\nimport {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../types';\r\n\r\nconst WeatherState = props => {\r\n  const initialState = {\r\n    units: 'metric',\r\n    lang: 'en',\r\n    loading: false,\r\n    alert: null,\r\n    places: [],\r\n    place: null,\r\n    current: {},\r\n    forecastToday: [],\r\n    forecast16: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(WeatherReducer, initialState);\r\n\r\n  //Search places to get weather for\r\n  const searchPlaces = async text => {\r\n    setLoading();\r\n    request\r\n      .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\r\n      .query({ limit: '10' })\r\n      .query({ namePrefix: text })\r\n      .query({ sort: '-population' })\r\n      .query({ languageCode: state.lang })\r\n      .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\r\n      .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\r\n      .set('Accept', 'application/json')\r\n      .then(res => {\r\n        if (res.body.data.length === 0) {\r\n          const alert =\r\n            state.lang === 'en'\r\n              ? 'No cities found. Check the spelling and try again'\r\n              : 'Ничего не найдено. Проверьте правильность написания и попробуйте снова';\r\n          setAlert(alert, 'dark');\r\n        } else {\r\n          dispatch({ type: SEARCH_PLACES, payload: res.body.data });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Set alert\r\n  const setAlert = (msg, type) => {\r\n    dispatch({ type: SET_ALERT, payload: { msg, type } });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n  };\r\n\r\n  //Select place in search and get weather for it\r\n  const selectPlace = async place => {\r\n    const { city, latitude, longitude } = place;\r\n    dispatch({ type: SELECT_PLACE, payload: { city, latitude, longitude } });\r\n  };\r\n\r\n  //Get current weather and 30-hr/16-day forecast\r\n  const getWeather = async () => {\r\n    setLoading();\r\n    const { units } = state,\r\n      { city, latitude, longitude } = state.place;\r\n    //Get current weather\r\n    const respo = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${\r\n        process.env.REACT_APP_OPENWEATHER_KEY\r\n      }`\r\n    );\r\n    const { timezone, dt, main, wind, weather, sys } = respo.data,\r\n      { temp, pressure, humidity } = main,\r\n      { sunrise, sunset } = sys;\r\n    const current = {\r\n      name: city,\r\n      timezone,\r\n      dt,\r\n      temp: temp.toFixed(),\r\n      wind: wind.speed,\r\n      pressure,\r\n      humidity,\r\n      weather: weather[0].main,\r\n      sky: weather[0].description,\r\n      icon: weather[0].icon,\r\n      sunrise,\r\n      sunset\r\n    };\r\n    dispatch({ type: GET_CURRENT_WEATHER, payload: current });\r\n    //Get forecast for 30 hours\r\n    const resp = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${\r\n        process.env.REACT_APP_OPENWEATHER_KEY\r\n      }`\r\n    );\r\n    const today = resp.data.list.slice(0, 10);\r\n    today.map(async period => {\r\n      //Change icons according to local time\r\n      if (sunrise + 86400 < period.dt && period.dt < sunset + 86400) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n      } else if (sunset < period.dt && period.dt < sunrise + 86400) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n      } else if (sunrise < period.dt && period.dt < sunset) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n      } else if (sunset - 86400 < period.dt && period.dt < sunrise) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n      }\r\n    });\r\n    dispatch({ type: GET_TODAY_WEATHER, payload: today });\r\n    //Get forecast for 16 days\r\n    const un = units === 'metric' ? 'M' : 'I';\r\n    const res = await axios.get(\r\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${latitude}&lon=${longitude}&units=${un}&key=${\r\n        process.env.REACT_APP_WEATHERBIT_KEY\r\n      }`\r\n    );\r\n    dispatch({ type: GET_FORECAST, payload: res.data.data });\r\n  };\r\n\r\n  //Switch language\r\n  const switchLang = () => {\r\n    state.lang === 'en'\r\n      ? dispatch({ type: SWITCH_LANG, payload: 'ru' })\r\n      : dispatch({ type: SWITCH_LANG, payload: 'en' });\r\n  };\r\n\r\n  // Switch units\r\n  const switchUnits = () => {\r\n    state.units === 'metric'\r\n      ? dispatch({ type: SWITCH_UNITS, payload: 'imperial' })\r\n      : dispatch({ type: SWITCH_UNITS, payload: 'metric' });\r\n  };\r\n\r\n  //Clear search\r\n  const clearSearch = () => dispatch({ type: CLEAR_SEARCH });\r\n\r\n  //Set loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        units: state.units,\r\n        lang: state.lang,\r\n        loading: state.loading,\r\n        alert: state.alert,\r\n        places: state.places,\r\n        place: state.place,\r\n        current: state.current,\r\n        forecastToday: state.forecastToday,\r\n        forecast16: state.forecast16,\r\n        searchPlaces,\r\n        clearSearch,\r\n        setAlert,\r\n        selectPlace,\r\n        getWeather,\r\n        switchUnits,\r\n        switchLang\r\n      }}\r\n    >\r\n      {props.children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport './App.css';\nimport WeatherState from './context/weather/WeatherState';\n\nconst App = () => {\n  return (\n    <WeatherState>\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <div className='container'>\n            <Alert />\n            <Route path='/weather-app' component={Search} />\n            <Switch>\n              <Route exact path='/weather-app' component={Places} />\n              <Route\n                exact\n                path='/weather-app/current/:name'\n                component={Forecast}\n              />\n              <Route exact path='/weather-app/about' component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </WeatherState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'moment/locale/ru';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}