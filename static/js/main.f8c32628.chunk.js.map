{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_ref","units","switchUnits","react_default","a","createElement","className","react_router_dom","to","onClick","Alert","alert","concat","type","msg","Search","state","text","onSubmit","e","preventDefault","_this","props","setAlert","searchPlaces","setState","onChange","Object","defineProperty","target","name","value","this","placeholder","showClear","clearSearch","Component","PeriodItem","period","dt_txt","main","wind","weather","time","Date","toLocaleTimeString","hour","minute","alt","description","src","icon","width","temp","toFixed","humidity","speed","pressure","DayItem","day","valid_date","max_temp","min_temp","wind_spd","pop","pres","rh","date","toLocaleDateString","weekday","month","Spinner","react","spinner","style","margin","display","Forecast","btn","_this2","_this$props","current","forecastToday","forecast16","loading","sky","_this$state","length","layout_Spinner","padding","react_router","exact","path","render","map","weather_PeriodItem","key","dt","weather_DayItem","ts","PlaceItem","place","axios","get","latitude","longitude","process","res","data","console","log","_this$props2","getForecast","city","regionCode","country","Places","places","PlaceItem_PlaceItem","id","About","href","App","_callee","regenerator_default","wrap","_context","prev","next","request","query","limit","namePrefix","sort","set","then","body","catch","err","stop","setTimeout","_callee2","lat","lon","respo","resp","today","un","_context2","sent","list","slice","switcher","layout_Navbar","layout_Alert","Search_Search","places_Places","Forecast_Forecast","component","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f8c32628.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ units, switchUnits }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>Weather app</h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>About</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='#' onClick={switchUnits}>\r\n            {units === 'metric' ? '→°F' : '→°C'}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  units: PropTypes.string.isRequired,\r\n  switchUnits: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>{alert.msg}</div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Search extends Component {\r\n  state = {\r\n    text: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    searchPlaces: PropTypes.func.isRequired,\r\n    clearSearch: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired,\r\n    showClear: PropTypes.bool.isRequired\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.text === '') {\r\n      this.props.setAlert('Please enter something', 'dark');\r\n    } else {\r\n      this.props.searchPlaces(this.state.text);\r\n      this.setState({ text: '' });\r\n    }\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} className='form'>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            value={this.state.text}\r\n            placeholder='Enter City Name...'\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value='Search'\r\n            className='btn btn-dark btn-block'\r\n          />\r\n        </form>\r\n        {this.props.showClear && (\r\n          <button\r\n            className='btn btn-grey btn-block'\r\n            onClick={this.props.clearSearch}\r\n          >\r\n            Clear\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period }) => {\r\n  const { dt_txt, main, wind, weather } = period,\r\n    time = new Date(dt_txt).toLocaleTimeString({\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>{time}</h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather[0].description}\r\n            src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n            width='100'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>{main.temp.toFixed()}°</h2>\r\n        </li>\r\n        {/* <li>Precipitation: {rain}%</li> */}\r\n        <li>Humidity: {main.humidity}%</li>\r\n        <li>Wind: {wind.speed.toFixed(1)} m/s</li>\r\n        <li>Pressure: {main.pressure.toFixed()} mbar</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day }) => {\r\n  const {\r\n      valid_date,\r\n      max_temp,\r\n      min_temp,\r\n      wind_spd,\r\n      pop,\r\n      pres,\r\n      rh,\r\n      weather\r\n    } = day,\r\n    date = new Date(valid_date).toLocaleDateString({\r\n      weekday: 'short',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>{date}</h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather.description}\r\n            src={`https://www.weatherbit.io/static/img/icons/${\r\n              weather.icon\r\n            }.png`}\r\n            width='70'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>\r\n            {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n          </h2>\r\n        </li>\r\n        <li>Precipitation: {pop}%</li>\r\n        <li>Humidity: {rh}%</li>\r\n        <li>Wind: {wind_spd.toFixed(1)} m/s</li>\r\n        <li>Pressure: {pres.toFixed()} mbar</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nexport default class Forecast extends Component {\r\n  state = {\r\n    btn: '16-day forecast',\r\n    target: 'forecast'\r\n  };\r\n\r\n  static propTypes = {\r\n    forecastToday: PropTypes.array.isRequired,\r\n    forecast16: PropTypes.array.isRequired,\r\n    current: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { current, forecastToday, forecast16, loading } = this.props,\r\n      { name, weather, sky, wind, temp, pressure, humidity, icon } = current,\r\n      time = new Date().toLocaleTimeString({\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      }),\r\n      { btn, target } = this.state;\r\n    if (forecastToday.length === 0) return null;\r\n    else if (loading) {\r\n      return <Spinner />;\r\n    } else\r\n      return (\r\n        <Router>\r\n          <Fragment>\r\n            <div className='card grid-2'>\r\n              <div className='card grid-2' style={{ padding: '0' }}>\r\n                <div className='all-center'>\r\n                  <img\r\n                    alt={sky}\r\n                    src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                    width='150'\r\n                  />\r\n                </div>\r\n                <div style={{ margin: 'auto 0' }}>\r\n                  <h1>{temp}°</h1>\r\n                  <h2>{name}</h2>\r\n                  <h3>{time}</h3>\r\n                </div>\r\n              </div>\r\n              <div style={{ padding: '0.7rem 0' }}>\r\n                <ul>\r\n                  <li>\r\n                    <h3>{weather}</h3>\r\n                  </li>\r\n                  <li>Humidity: {humidity}%</li>\r\n                  <li>Wind: {wind.toFixed(1)} m/s</li>\r\n                  <li>Pressure: {pressure.toFixed()} mbar</li>\r\n                </ul>\r\n                <Link\r\n                  to={`/weather-app/${target}/${name}`}\r\n                  className='btn btn-dark btn-sm my-1'\r\n                  onClick={() => {\r\n                    target === 'forecast'\r\n                      ? this.setState({\r\n                          btn: '24-hr forecast',\r\n                          target: 'current'\r\n                        })\r\n                      : this.setState({\r\n                          btn: '16-day forecast',\r\n                          target: 'forecast'\r\n                        });\r\n                  }}\r\n                >\r\n                  {btn}\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/weather-app/current/:name'\r\n                render={props => (\r\n                  <div className='grid-3'>\r\n                    {forecastToday.map(period => (\r\n                      <PeriodItem key={period.dt} period={period} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path='/weather-app/forecast/:name'\r\n                render={props => (\r\n                  <div className='grid-4'>\r\n                    {forecast16.map(day => (\r\n                      <DayItem key={day.ts} day={day} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n            </Switch>\r\n          </Fragment>\r\n        </Router>\r\n      );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nexport default class PlaceItem extends Component {\r\n  state = {\r\n    name: '',\r\n    sky: '',\r\n    temp: '',\r\n    icon: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    place: PropTypes.object.isRequired,\r\n    units: PropTypes.string.isRequired,\r\n    getForecast: PropTypes.func.isRequired\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { place, units } = this.props;\r\n    const res = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${\r\n        place.latitude\r\n      }&lon=${place.longitude}&units=${units}&APPID=${\r\n        process.env.REACT_APP_OPENWEATHER_KEY\r\n      }`\r\n    );\r\n    this.setState({\r\n      name: res.data.name,\r\n      temp: res.data.main.temp.toFixed(),\r\n      sky: res.data.weather[0].description,\r\n      icon: res.data.weather[0].icon\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { place, getForecast } = this.props,\r\n      { name, temp, sky, icon } = this.state,\r\n      { city, regionCode, country, latitude, longitude } = place;\r\n    return (\r\n      <div className='card text-center'>\r\n        <h1>{temp}°</h1>\r\n        <img\r\n          alt={sky}\r\n          src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          width='100'\r\n        />\r\n        <h3>\r\n          {city}, {regionCode}\r\n        </h3>\r\n        <h4>{country}</h4>\r\n        <div>\r\n          <Link\r\n            to={`/weather-app/current/${name}`}\r\n            className='btn btn-dark btn-sm my-1'\r\n            onClick={() => getForecast(name, latitude, longitude)}\r\n          >\r\n            Select\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Places = ({ places, loading, getForecast, units }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='grid-3'>\r\n        {places.map(place => (\r\n          <PlaceItem\r\n            key={place.id}\r\n            place={place}\r\n            units={units}\r\n            getForecast={getForecast}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nPlaces.propTypes = {\r\n  places: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  units: PropTypes.string.isRequired,\r\n  getForecast: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Places;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>App to get current weather and 16-day forecast.</p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport './App.css';\nimport request from 'superagent';\nimport axios from 'axios';\n\nexport default class App extends Component {\n  state = {\n    units: 'metric',\n    loading: false,\n    alert: null,\n    places: [],\n    place: null,\n    current: {},\n    forecastToday: [],\n    forecast16: []\n  };\n\n  //Search places to get weather for\n  searchPlaces = async text => {\n    this.setState({ loading: true });\n    request\n      .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\n      .query({ limit: '10' })\n      .query({ namePrefix: text })\n      .query({ sort: '-population' })\n      .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\n      .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\n      .set('Accept', 'application/json')\n      .then(res => {\n        this.setState({ places: res.body.data, loading: false });\n        console.log(this.state.places);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //Clear search\n  clearSearch = () => this.setState({ places: [], loading: false });\n\n  //Set alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n    setTimeout(() => this.setState({ alert: null }), 3000);\n  };\n\n  //Get current weather details and 16-day forecast\n  getForecast = async (name, lat, lon) => {\n    const { units } = this.state;\n    this.setState({ loading: true });\n    const respo = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    this.setState({\n      current: {\n        name: respo.data.name,\n        temp: respo.data.main.temp.toFixed(),\n        wind: respo.data.wind.speed,\n        pressure: respo.data.main.pressure,\n        humidity: respo.data.main.humidity,\n        weather: respo.data.weather[0].main,\n        sky: respo.data.weather[0].description,\n        icon: respo.data.weather[0].icon\n      }\n    });\n    const resp = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    const today = resp.data.list.slice(0, 9);\n    this.setState({\n      forecastToday: today\n    });\n    const un = units === 'metric' ? 'M' : 'I';\n    const res = await axios.get(\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${lat}&lon=${lon}&units=${un}&key=${\n        process.env.REACT_APP_WEATHERBIT_KEY\n      }`\n    );\n    this.setState({\n      forecast16: res.data.data,\n      loading: false,\n      place: { name, lat, lon }\n    });\n    console.log(this.state.forecastToday);\n    console.log(this.state.forecast16);\n    console.log(this.state.current);\n  };\n\n  // Switch units\n  switchUnits = () => {\n    this.state.units === 'metric'\n      ? this.switcher('imperial')\n      : this.switcher('metric');\n  };\n\n  // Update state after units switch\n  switcher = units => {\n    const { place } = this.state;\n    if (place !== null) {\n      this.setState(\n        () => {\n          return { units: units };\n        },\n        () => this.getForecast(place.name, place.lat, place.lon)\n      );\n    } else {\n      this.setState({ units: units });\n      this.clearSearch();\n    }\n  };\n\n  render() {\n    const {\n      places,\n      loading,\n      alert,\n      units,\n      current,\n      forecastToday,\n      forecast16\n    } = this.state;\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar switchUnits={this.switchUnits} units={units} />\n          <div className='container'>\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path='/weather-app'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchPlaces={this.searchPlaces}\n                      clearSearch={this.clearSearch}\n                      showClear={places.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                    />\n                    <Places\n                      places={places}\n                      loading={loading}\n                      getForecast={this.getForecast}\n                      units={units}\n                    />\n                  </Fragment>\n                )}\n              />\n              <Route\n                exact\n                path='/weather-app/current/:name'\n                render={props => (\n                  <Forecast\n                    current={current}\n                    forecastToday={forecastToday}\n                    forecast16={forecast16}\n                    loading={loading}\n                  />\n                )}\n              />\n              <Route exact path='/weather-app/about' component={About} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}