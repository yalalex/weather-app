{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_ref","units","switchUnits","react_default","a","createElement","className","react_router_dom","to","onClick","Alert","alert","concat","type","msg","Search","state","text","onSubmit","e","preventDefault","_this","props","setAlert","searchPlaces","setState","onChange","Object","defineProperty","target","name","value","this","placeholder","showClear","clearSearch","Component","PeriodItem","period","loc","dt_txt","main","wind","weather","time","Date","toLocaleTimeString","hour","minute","second","undefined","alt","description","src","icon","width","temp","toFixed","humidity","speed","pressure","DayItem","day","valid_date","max_temp","min_temp","wind_spd","pop","pres","rh","date","toLocaleDateString","weekday","month","year","Spinner","react","spinner","style","margin","display","Forecast","_this$props","current","forecastToday","forecast16","loading","timezone","sky","length","layout_Spinner","padding","react_router","exact","path","render","map","weather_PeriodItem","key","dt","weather_DayItem","ts","PlaceItem","place","axios","get","latitude","longitude","process","res","data","console","log","_this$props2","getForecast","_this$state","city","regionCode","country","Places","places","PlaceItem_PlaceItem","id","About","href","App","_callee","regenerator_default","wrap","_context","prev","next","request","query","limit","namePrefix","sort","set","then","body","catch","err","stop","setTimeout","_callee2","lat","lon","respo","resp","today","un","_context2","sent","list","slice","switcher","_this2","layout_Navbar","layout_Alert","Search_Search","places_Places","Forecast_Forecast","component","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7c1819af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ units, switchUnits }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>Weather app</h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>About</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='#' onClick={switchUnits}>\r\n            {units === 'metric' ? '→°F' : '→°C'}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  units: PropTypes.string.isRequired,\r\n  switchUnits: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>{alert.msg}</div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Search extends Component {\r\n  state = {\r\n    text: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    searchPlaces: PropTypes.func.isRequired,\r\n    clearSearch: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired,\r\n    showClear: PropTypes.bool.isRequired\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.text === '') {\r\n      this.props.setAlert('Please enter something', 'dark');\r\n    } else {\r\n      this.props.searchPlaces(this.state.text);\r\n      this.setState({ text: '' });\r\n    }\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} className='form'>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            value={this.state.text}\r\n            placeholder='Enter City Name...'\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value='Search'\r\n            className='btn btn-dark btn-block'\r\n          />\r\n        </form>\r\n        {this.props.showClear && (\r\n          <button\r\n            className='btn btn-grey btn-block'\r\n            onClick={this.props.clearSearch}\r\n          >\r\n            Clear\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period, loc }) => {\r\n  const { dt_txt, main, wind, weather } = period,\r\n    time = new Date(dt_txt).toLocaleTimeString(loc, {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: undefined\r\n    });\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>{time}</h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather[0].description}\r\n            src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n            width='100'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>{main.temp.toFixed()}°</h2>\r\n        </li>\r\n        {/* <li>Precipitation: {rain}%</li> */}\r\n        <li>Humidity: {main.humidity}%</li>\r\n        <li>Wind: {wind.speed.toFixed(1)} m/s</li>\r\n        <li>Pressure: {main.pressure.toFixed()} mbar</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day, loc }) => {\r\n  const {\r\n      valid_date,\r\n      max_temp,\r\n      min_temp,\r\n      wind_spd,\r\n      pop,\r\n      pres,\r\n      rh,\r\n      weather\r\n    } = day,\r\n    date = new Date(valid_date).toLocaleDateString(loc, {\r\n      weekday: 'short',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: undefined\r\n    });\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>{date}</h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather.description}\r\n            src={`https://www.weatherbit.io/static/img/icons/${\r\n              weather.icon\r\n            }.png`}\r\n            width='70'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>\r\n            {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n          </h2>\r\n        </li>\r\n        <li>Precipitation: {pop}%</li>\r\n        <li>Humidity: {rh}%</li>\r\n        <li>Wind: {wind_spd.toFixed(1)} m/s</li>\r\n        <li>Pressure: {pres.toFixed()} mbar</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nexport default class Forecast extends Component {\r\n  static propTypes = {\r\n    forecastToday: PropTypes.array.isRequired,\r\n    forecast16: PropTypes.array.isRequired,\r\n    current: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    loc: PropTypes.string.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { current, forecastToday, forecast16, loading, loc } = this.props,\r\n      {\r\n        name,\r\n        timezone,\r\n        weather,\r\n        sky,\r\n        wind,\r\n        temp,\r\n        pressure,\r\n        humidity,\r\n        icon\r\n      } = current,\r\n      time = new Date().toLocaleTimeString(loc, {\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: undefined\r\n      });\r\n    if (forecastToday.length === 0) return null;\r\n    else if (loading) {\r\n      return <Spinner />;\r\n    } else\r\n      return (\r\n        <Router>\r\n          <Fragment>\r\n            <div className='card grid-2'>\r\n              <div className='card grid-2' style={{ padding: '0' }}>\r\n                <div className='all-center'>\r\n                  <img\r\n                    alt={sky}\r\n                    src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                    width='150'\r\n                  />\r\n                </div>\r\n                <div style={{ margin: 'auto 0' }}>\r\n                  <h1>{temp}°</h1>\r\n                  <h2>{name}</h2>\r\n                  <h3>{time}</h3>\r\n                </div>\r\n              </div>\r\n              <div style={{ padding: '0.7rem 0' }}>\r\n                <ul>\r\n                  <li>\r\n                    <h3>{weather}</h3>\r\n                  </li>\r\n                  <li>Humidity: {humidity}%</li>\r\n                  <li>Wind: {wind.toFixed(1)} m/s</li>\r\n                  <li>Pressure: {pressure.toFixed()} mbar</li>\r\n                </ul>\r\n                <Link\r\n                  to={`/weather-app/${name}/current`}\r\n                  className='btn btn-dark btn-sm my-1'\r\n                >\r\n                  24-hr forecast\r\n                </Link>\r\n                <Link\r\n                  to={`/weather-app/${name}/forecast`}\r\n                  className='btn btn-dark btn-sm my-1'\r\n                >\r\n                  16-day forecast\r\n                </Link>\r\n                {/* <Link\r\n                  to={`/weather-app/${name}/${target}`}\r\n                  className='btn btn-dark btn-sm my-1'\r\n                  onClick={() => {\r\n                    target === 'forecast'\r\n                      ? this.setState({\r\n                          btn: '24-hr forecast',\r\n                          target: 'current'\r\n                        })\r\n                      : this.setState({\r\n                          btn: '16-day forecast',\r\n                          target: 'forecast'\r\n                        });\r\n                  }}\r\n                >\r\n                  {btn}\r\n                </Link> */}\r\n              </div>\r\n            </div>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/weather-app/:name/current'\r\n                render={props => (\r\n                  <div className='grid-3'>\r\n                    {forecastToday.map(period => (\r\n                      <PeriodItem key={period.dt} period={period} loc={loc} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path='/weather-app/:name/forecast'\r\n                render={props => (\r\n                  <div className='grid-4'>\r\n                    {forecast16.map(day => (\r\n                      <DayItem key={day.ts} day={day} loc={loc} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n            </Switch>\r\n          </Fragment>\r\n        </Router>\r\n      );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nexport default class PlaceItem extends Component {\r\n  state = {\r\n    name: '',\r\n    sky: '',\r\n    temp: '',\r\n    icon: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    place: PropTypes.object.isRequired,\r\n    units: PropTypes.string.isRequired,\r\n    getForecast: PropTypes.func.isRequired\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { place, units } = this.props;\r\n    const res = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${\r\n        place.latitude\r\n      }&lon=${place.longitude}&units=${units}&APPID=${\r\n        process.env.REACT_APP_OPENWEATHER_KEY\r\n      }`\r\n    );\r\n    this.setState({\r\n      name: res.data.name,\r\n      temp: res.data.main.temp.toFixed(),\r\n      sky: res.data.weather[0].description,\r\n      icon: res.data.weather[0].icon\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { place, getForecast } = this.props,\r\n      { temp, sky, icon } = this.state,\r\n      { city, regionCode, country, latitude, longitude } = place;\r\n    return (\r\n      <div className='card text-center'>\r\n        <h1>{temp}°</h1>\r\n        <img\r\n          alt={sky}\r\n          src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          width='100'\r\n        />\r\n        <h3>\r\n          {city}, {regionCode}\r\n        </h3>\r\n        <h4>{country}</h4>\r\n        <div>\r\n          <Link\r\n            to={`/weather-app/${city}`}\r\n            className='btn btn-dark btn-sm my-1'\r\n            onClick={() => getForecast(city, latitude, longitude)}\r\n          >\r\n            Select\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Places = ({ places, loading, getForecast, units }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='grid-3'>\r\n        {places.map(place => (\r\n          <PlaceItem\r\n            key={place.id}\r\n            place={place}\r\n            units={units}\r\n            getForecast={getForecast}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nPlaces.propTypes = {\r\n  places: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  units: PropTypes.string.isRequired,\r\n  getForecast: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Places;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>App to get current weather and 16-day forecast.</p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport './App.css';\nimport request from 'superagent';\nimport axios from 'axios';\n\nexport default class App extends Component {\n  state = {\n    units: 'metric',\n    loc: 'en-GB',\n    loading: false,\n    alert: null,\n    places: [],\n    place: null,\n    current: {},\n    forecastToday: [],\n    forecast16: []\n  };\n\n  //Search places to get weather for\n  searchPlaces = async text => {\n    this.setState({ loading: true });\n    request\n      .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\n      .query({ limit: '10' })\n      .query({ namePrefix: text })\n      .query({ sort: '-population' })\n      .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\n      .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\n      .set('Accept', 'application/json')\n      .then(res => {\n        this.setState({ places: res.body.data, loading: false });\n        console.log(this.state.places);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //Clear search\n  clearSearch = () => this.setState({ places: [], loading: false });\n\n  //Set alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n    setTimeout(() => this.setState({ alert: null }), 3000);\n  };\n\n  //Get current weatherm 24-hr and 16-day forecast\n  getForecast = async (name, lat, lon) => {\n    const { units } = this.state;\n    this.setState({ loading: true });\n    const respo = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    this.setState({\n      current: {\n        name,\n        timezone: respo.data.timezone,\n        temp: respo.data.main.temp.toFixed(),\n        wind: respo.data.wind.speed,\n        pressure: respo.data.main.pressure,\n        humidity: respo.data.main.humidity,\n        weather: respo.data.weather[0].main,\n        sky: respo.data.weather[0].description,\n        icon: respo.data.weather[0].icon\n      }\n    });\n    const resp = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    const today = resp.data.list.slice(0, 9);\n    this.setState({\n      forecastToday: today\n    });\n    const un = units === 'metric' ? 'M' : 'I';\n    const res = await axios.get(\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${lat}&lon=${lon}&units=${un}&key=${\n        process.env.REACT_APP_WEATHERBIT_KEY\n      }`\n    );\n    this.setState({\n      forecast16: res.data.data,\n      loading: false,\n      place: { name, lat, lon }\n    });\n    console.log(this.state.forecastToday);\n    console.log(this.state.forecast16);\n    console.log(this.state.current);\n    console.log(this.state.place);\n  };\n\n  // Switch units\n  switchUnits = () => {\n    this.state.units === 'metric'\n      ? this.switcher('imperial', 'en-US')\n      : this.switcher('metric', 'en-GB');\n  };\n\n  // Update state after units switch\n  switcher = (units, loc) => {\n    const { place } = this.state;\n    if (place !== null) {\n      this.setState(\n        () => {\n          return { units, loc };\n        },\n        () => this.getForecast(place.name, place.lat, place.lon)\n      );\n    } else {\n      this.setState({ units, loc });\n      this.clearSearch();\n    }\n  };\n\n  render() {\n    const {\n      places,\n      place,\n      loading,\n      alert,\n      units,\n      current,\n      forecastToday,\n      forecast16,\n      loc\n    } = this.state;\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar switchUnits={this.switchUnits} units={units} />\n          <div className='container'>\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path='/weather-app'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchPlaces={this.searchPlaces}\n                      clearSearch={this.clearSearch}\n                      showClear={places.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                    />\n                    <Places\n                      places={places}\n                      loading={loading}\n                      getForecast={this.getForecast}\n                      units={units}\n                    />\n                  </Fragment>\n                )}\n              />\n              <Route\n                exact\n                path='/weather-app/:name'\n                render={props => (\n                  <Forecast\n                    current={current}\n                    forecastToday={forecastToday}\n                    forecast16={forecast16}\n                    loading={loading}\n                    loc={loc}\n                  />\n                )}\n              />\n              <Route exact path='/weather-app/about' component={About} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}