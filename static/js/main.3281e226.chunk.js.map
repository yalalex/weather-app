{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_ref","units","lang","switchLang","switchUnits","react_default","a","createElement","className","react_router_dom","to","onClick","Alert","alert","concat","type","msg","Search","state","text","onSubmit","e","preventDefault","_this","props","setAlert","searchPlaces","setState","history","push","onChange","Object","defineProperty","target","name","value","this","placeholder","showClear","clearSearch","Component","PeriodItem","period","offset","dt","main","weather","time","dist_default","locale","unix","format","alt","description","src","icon","style","width","temp","toFixed","DayItem","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","Spinner","react","spinner","margin","display","Forecast","btn","switchTarget","switchButton","prevProps","_this2","_this$props","current","forecastToday","forecast16","loading","_this$state","timezone","sky","wind","pressure","humidity","Date","getTimezoneOffset","length","layout_Spinner","padding","react_router","exact","path","render","map","weather_PeriodItem","key","weather_DayItem","PlaceItem","place","getForecast","city","regionCode","country","Places","places","places_PlaceItem","id","About","href","App","_callee","regenerator_default","wrap","_context","prev","next","request","get","query","limit","namePrefix","sort","languageCode","set","process","then","res","body","data","getPlaceWeather","console","log","catch","err","stop","places1","toConsumableArray","_ref2","asyncToGenerator","mark","_callee2","latitude","longitude","_res$data","_context2","axios","sent","assign","_x2","apply","arguments","setTimeout","_callee4","respo","_respo$data","sys","sunrise","sunset","resp","today","un","_context4","speed","list","slice","_ref4","_callee3","_context3","_x4","switcher","_this$state2","window","location","pathname","_this$state3","layout_Navbar","layout_Alert","Search_Search","places_Places","Forecast_Forecast","pages_About","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3281e226.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ units, lang, switchLang, switchUnits }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className='fas fa-cloud-sun-rain' /> Weather app\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>{lang === 'en' ? 'Search' : 'Поиск'}</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>\r\n            {lang === 'en' ? 'About' : 'Инфо'}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {units === 'metric' ? '°C' : '°F'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={switchUnits}>{units === 'metric' ? '°F' : '°C'}</li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {lang === 'en' ? 'EN' : 'RU'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={switchLang}>{lang === 'en' ? 'RU' : 'EN'}</li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  units: PropTypes.string.isRequired,\r\n  switchUnits: PropTypes.func.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>\r\n        <i className='fas fa-info-circle' /> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Search extends Component {\r\n  state = {\r\n    text: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    searchPlaces: PropTypes.func.isRequired,\r\n    clearSearch: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired,\r\n    showClear: PropTypes.bool.isRequired,\r\n    lang: PropTypes.string.isRequired\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.text === '') {\r\n      const alert =\r\n        this.props.lang === 'en'\r\n          ? 'Please enter something'\r\n          : 'Пожалуйста, введите что-нибудь';\r\n      this.props.setAlert(alert, 'dark');\r\n    } else {\r\n      this.props.searchPlaces(this.state.text);\r\n      this.setState({ text: '' });\r\n      this.props.history.push('/weather-app');\r\n    }\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} className='form'>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            value={this.state.text}\r\n            placeholder={\r\n              this.props.lang === 'en'\r\n                ? 'Enter City Name...'\r\n                : 'Введите название города на русском языке...'\r\n            }\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value={this.props.lang === 'en' ? 'Search' : 'Поиск'}\r\n            className='btn btn-dark btn-block'\r\n          />\r\n        </form>\r\n        {this.props.showClear && (\r\n          <button\r\n            className='btn btn-grey btn-block'\r\n            onClick={this.props.clearSearch}\r\n          >\r\n            {this.props.lang === 'en' ? 'Clear' : 'Очистить'}\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period, offset, lang }) => {\r\n  const { dt, main, weather } = period,\r\n    time = dt + offset;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment locale={lang} unix format='ddd LT'>\r\n              {time}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather[0].description}\r\n            src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <h1>{main.temp.toFixed()}°</h1>\r\n        </li>\r\n        {/* <li>Precipitation: {rain}%</li> */}\r\n        {/* <li>\r\n          {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n          {main.humidity}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n          {wind.speed.toFixed(1)} {lang === 'en' ? 'm/s' : 'м/с'}\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n          {main.pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n        </li> */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day, lang }) => {\r\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment locale={lang} unix format='ddd Do'>\r\n              {ts}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather.description}\r\n            src={`https://www.weatherbit.io/static/img/icons/${\r\n              weather.icon\r\n            }.png`}\r\n            style={{ width: '70px' }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>\r\n            {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n          </h2>\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Precipitation: ' : 'Осадки: '}\r\n          {pop}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n          {rh}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n          {wind_spd.toFixed(1)} {lang === 'en' ? 'm/s' : 'м/с'}\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n          {pres.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\n\r\nexport default class Forecast extends Component {\r\n  state = {\r\n    btn: '',\r\n    target: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    forecastToday: PropTypes.array.isRequired,\r\n    forecast16: PropTypes.array.isRequired,\r\n    current: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    lang: PropTypes.string.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.lang === 'en'\r\n      ? this.setState({ btn: '16-day forecast', target: '16-day' })\r\n      : this.setState({ btn: 'Прогноз на 16 дней', target: '16-day' });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    prevProps.lang !== this.props.lang && this.switchButton();\r\n    // if (prevProps.lang !== this.props.lang || ) {\r\n    //   this.switchButton();\r\n    // }\r\n  }\r\n\r\n  switchTarget = target => {\r\n    target === '16-day'\r\n      ? this.setState(\r\n          () => {\r\n            return { target: 'current' };\r\n          },\r\n          () => this.switchButton()\r\n        )\r\n      : this.setState(\r\n          () => {\r\n            return { target: '16-day' };\r\n          },\r\n          () => this.switchButton()\r\n        );\r\n  };\r\n\r\n  switchButton = () => {\r\n    const { lang } = this.props;\r\n    this.state.target === '16-day'\r\n      ? lang === 'en'\r\n        ? this.setState({ btn: '16-day forecast' })\r\n        : this.setState({ btn: 'Прогноз на 16 дней' })\r\n      : lang === 'en'\r\n      ? this.setState({ btn: '30-hr forecast' })\r\n      : this.setState({ btn: 'Прогноз на 30 часов' });\r\n  };\r\n\r\n  render() {\r\n    const { current, forecastToday, forecast16, loading, lang } = this.props,\r\n      { btn, target } = this.state,\r\n      {\r\n        name,\r\n        timezone,\r\n        dt,\r\n        weather,\r\n        sky,\r\n        wind,\r\n        temp,\r\n        pressure,\r\n        humidity,\r\n        icon\r\n      } = current,\r\n      offset = new Date().getTimezoneOffset() * 60 + timezone,\r\n      time = dt + offset;\r\n    if (forecastToday.length === 0) return null;\r\n    else if (loading) {\r\n      return <Spinner />;\r\n    } else\r\n      return (\r\n        <Router>\r\n          <Fragment>\r\n            <div className='card grid-2'>\r\n              <div className='card grid-2' style={{ padding: '0' }}>\r\n                <div className='all-center'>\r\n                  <img\r\n                    alt={sky}\r\n                    src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                    style={{ width: '150px' }}\r\n                  />\r\n                </div>\r\n                <div style={{ margin: 'auto 0' }}>\r\n                  <h1>{temp}°</h1>\r\n                  <h2>{name}</h2>\r\n                  <h3>\r\n                    <Moment locale={lang} unix format='LT'>\r\n                      {time}\r\n                    </Moment>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div style={{ padding: '0.7rem 0' }}>\r\n                <ul>\r\n                  <li>\r\n                    <h3>{lang === 'en' ? weather : 'Текущие условия:'}</h3>\r\n                  </li>\r\n                  <li>\r\n                    {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n                    {humidity}%\r\n                  </li>\r\n                  <li>\r\n                    {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n                    {wind.toFixed(1)} {lang === 'en' ? 'm/s' : 'м/с'}\r\n                  </li>\r\n                  <li>\r\n                    {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n                    {pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n                  </li>\r\n                </ul>\r\n                <Link\r\n                  to={`/weather-app/${target}/${name}`}\r\n                  className='btn btn-dark btn-sm my-1'\r\n                  onClick={() => this.switchTarget(target)}\r\n                >\r\n                  {btn}\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/weather-app/current/:name'\r\n                render={props => (\r\n                  <div className='grid-5'>\r\n                    {forecastToday.map(period => (\r\n                      <PeriodItem\r\n                        key={period.dt}\r\n                        period={period}\r\n                        offset={offset}\r\n                        lang={lang}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path='/weather-app/16-day/:name'\r\n                render={props => (\r\n                  <div className='grid-4'>\r\n                    {forecast16.map(day => (\r\n                      <DayItem key={day.ts} day={day} lang={lang} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n            </Switch>\r\n          </Fragment>\r\n        </Router>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlaceItem = ({ place, getForecast, lang }) => {\r\n  const { city, regionCode, country, temp, sky, icon } = place;\r\n  return (\r\n    <div className='card text-center'>\r\n      <h1>{temp}°</h1>\r\n      <img\r\n        alt={sky}\r\n        src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        style={{ width: '100px' }}\r\n      />\r\n      <h3>\r\n        {city}, {regionCode}\r\n      </h3>\r\n      <h4>{country}</h4>\r\n      <div>\r\n        <Link\r\n          to={`/weather-app/current/${city}`}\r\n          className='btn btn-dark btn-sm my-1'\r\n          onClick={() => getForecast(place)}\r\n        >\r\n          {lang === 'en' ? 'Select' : 'Выбрать'}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlaceItem.propTypes = {\r\n  place: PropTypes.object.isRequired,\r\n  getForecast: PropTypes.func.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Places = ({ places, getForecast, loading, lang }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='grid-4'>\r\n        {places.map(place => (\r\n          <PlaceItem\r\n            key={place.id}\r\n            place={place}\r\n            getForecast={getForecast}\r\n            lang={lang}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nPlaces.propTypes = {\r\n  places: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  lang: PropTypes.string.isRequired,\r\n  getForecast: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Places;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst About = ({ lang }) => {\r\n  return lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>\r\n        An application for finding weather in more than 134,000 cities in the\r\n        world.\r\n      </p>\r\n      <p>\r\n        Provides information on current weather, as well as a detailed forecast\r\n        for the next 30 hours and a forecast for 16 days.\r\n      </p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>О приложении</h2>\r\n      <p>Приложение для поиска погоды в более чем 134 000 городах мира.</p>\r\n      <p>\r\n        Предоставляет информацию по текущей погоде, а так же подробный прогноз\r\n        на ближайшие 30 часов и прогноз на 16 дней.\r\n      </p>\r\n      <p>\r\n        Сделал <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport './App.css';\nimport request from 'superagent';\nimport axios from 'axios';\n\nexport default class App extends Component {\n  state = {\n    units: 'metric',\n    lang: 'en',\n    loading: false,\n    alert: null,\n    places: [],\n    place: null,\n    current: {},\n    forecastToday: [],\n    forecast16: []\n  };\n\n  //Search places to get weather for\n  searchPlaces = async text => {\n    this.setState({ loading: true });\n    request\n      .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\n      .query({ limit: '10' })\n      .query({ namePrefix: text })\n      .query({ sort: '-population' })\n      .query({ languageCode: this.state.lang })\n      .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\n      .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\n      .set('Accept', 'application/json')\n      .then(res => {\n        if (res.body.data.length === 0) {\n          const alert =\n            this.state.lang === 'en'\n              ? 'No cities found. Check the spelling and try again'\n              : 'Ничего не найдено. Проверьте правильность написания и попробуйте снова';\n          this.setAlert(alert, 'dark');\n          this.setState({ loading: false });\n        } else {\n          this.setState({ places: res.body.data, loading: false });\n          this.getPlaceWeather();\n        }\n        console.log(this.state.places);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //Get weather for search request\n  getPlaceWeather = () => {\n    const { units, places } = this.state;\n    const places1 = [...places];\n    places1.map(async place => {\n      let { latitude, longitude } = place;\n      let res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${\n          process.env.REACT_APP_OPENWEATHER_KEY\n        }`\n      );\n      let { main, weather } = res.data;\n      Object.assign(place, {\n        temp: main.temp.toFixed(),\n        sky: weather[0].description,\n        icon: weather[0].icon\n      });\n      this.setState({ places: places1 });\n    });\n  };\n\n  //Clear search\n  clearSearch = () => this.setState({ places: [], loading: false });\n\n  //Set alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n    setTimeout(() => this.setState({ alert: null }), 3000);\n  };\n\n  //Get current weather and 30-hr/16-day forecast\n  getForecast = async place => {\n    const { units } = this.state,\n      { city, latitude, longitude } = place;\n    this.setState({ loading: true });\n    const respo = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    const { timezone, dt, main, wind, weather, sys } = respo.data,\n      { temp, pressure, humidity } = main,\n      { sunrise, sunset } = sys;\n    this.setState({\n      current: {\n        name: city,\n        timezone,\n        dt,\n        temp: temp.toFixed(),\n        wind: wind.speed,\n        pressure,\n        humidity,\n        weather: weather[0].main,\n        sky: weather[0].description,\n        icon: weather[0].icon,\n        sunrise,\n        sunset\n      }\n    });\n    const resp = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    const today = resp.data.list.slice(0, 10);\n    today.map(async period => {\n      //Change icons according to local time\n      if (sunrise + 86400 < period.dt && period.dt < sunset + 86400) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\n      } else if (sunset < period.dt && period.dt < sunrise + 86400) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\n      } else if (sunrise < period.dt && period.dt < sunset) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\n      } else if (sunset - 86400 < period.dt && period.dt < sunrise) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\n      }\n    });\n    this.setState({\n      forecastToday: today\n    });\n    const un = units === 'metric' ? 'M' : 'I';\n    const res = await axios.get(\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${latitude}&lon=${longitude}&units=${un}&key=${\n        process.env.REACT_APP_WEATHERBIT_KEY\n      }`\n    );\n    this.setState({\n      forecast16: res.data.data,\n      loading: false,\n      place: { city, latitude, longitude }\n    });\n    console.log(this.state.forecastToday);\n    console.log(this.state.forecast16);\n    console.log(this.state.current);\n    console.log(this.state.place);\n  };\n\n  //Switch language\n  switchLang = () => {\n    this.state.lang === 'en'\n      ? this.setState({ lang: 'ru' })\n      : this.setState({ lang: 'en' });\n  };\n\n  // Switch units init\n  switchUnits = () => {\n    this.state.units === 'metric'\n      ? this.switcher('imperial')\n      : this.switcher('metric');\n  };\n\n  //Switch units\n  switcher = units => {\n    const { place, places } = this.state;\n    if (place !== null && window.location.pathname !== '/weather-app') {\n      this.setState(\n        () => {\n          return { units };\n        },\n        () => this.getForecast(place)\n      );\n      this.clearSearch();\n    } else if (\n      (place === null && places.length > 0) ||\n      (place !== null && window.location.pathname === '/weather-app')\n    ) {\n      this.setState(\n        () => {\n          return { units };\n        },\n        () => this.getPlaceWeather()\n      );\n    } else this.setState({ units });\n  };\n\n  render() {\n    const {\n      places,\n      // place,\n      loading,\n      alert,\n      units,\n      lang,\n      current,\n      forecastToday,\n      forecast16\n    } = this.state;\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar\n            switchUnits={this.switchUnits}\n            units={units}\n            switchLang={this.switchLang}\n            lang={lang}\n          />\n          <div className='container'>\n            <Alert alert={alert} lang={lang} />\n            <Route\n              path='/weather-app'\n              render={props => (\n                <Search\n                  {...props}\n                  searchPlaces={this.searchPlaces}\n                  clearSearch={this.clearSearch}\n                  showClear={\n                    places.length > 0 &&\n                    window.location.pathname === '/weather-app'\n                      ? true\n                      : false\n                  }\n                  setAlert={this.setAlert}\n                  lang={lang}\n                />\n              )}\n            />\n            <Switch>\n              <Route\n                exact\n                path='/weather-app'\n                render={props => (\n                  <Places\n                    places={places}\n                    getForecast={this.getForecast}\n                    loading={loading}\n                    lang={lang}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path='/weather-app/current/:name'\n                render={props => (\n                  <Forecast\n                    {...props}\n                    current={current}\n                    forecastToday={forecastToday}\n                    forecast16={forecast16}\n                    loading={loading}\n                    lang={lang}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path='/weather-app/about'\n                render={props => <About lang={lang} />}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'moment/locale/ru';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}