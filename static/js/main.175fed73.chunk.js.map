{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_ref","units","switchUnits","react_default","a","createElement","className","react_router_dom","to","onClick","Alert","alert","concat","type","msg","Search","state","text","onSubmit","e","preventDefault","_this","props","setAlert","searchPlaces","setState","onChange","Object","defineProperty","target","name","value","this","placeholder","showClear","clearSearch","Component","PeriodItem","period","offset","dt","main","wind","weather","time","dist_default","unix","format","alt","description","src","icon","width","temp","toFixed","humidity","speed","pressure","DayItem","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","Spinner","react","spinner","style","margin","display","Forecast","btn","_this2","_this$props","current","forecastToday","forecast16","loading","_this$state","timezone","sky","Date","getTimezoneOffset","length","layout_Spinner","padding","react_router","exact","path","render","map","weather_PeriodItem","key","weather_DayItem","PlaceItem","place","getForecast","console","log","city","regionCode","country","latitude","longitude","Places","places","places_PlaceItem","id","About","href","App","_callee","regenerator_default","wrap","_context","prev","next","request","get","query","limit","namePrefix","sort","set","process","then","res","body","data","getPlaceWeather","catch","err","stop","_ref2","asyncToGenerator","mark","_callee2","_context2","axios","sent","assign","_x2","apply","arguments","setTimeout","_callee3","lat","lon","respo","resp","today","un","_context3","list","slice","switcher","loc","layout_Navbar","layout_Alert","Search_Search","places_Places","Forecast_Forecast","component","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.175fed73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ units, switchUnits }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>Weather app</h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>About</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='#' onClick={switchUnits}>\r\n            {units === 'metric' ? '→°F' : '→°C'}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  units: PropTypes.string.isRequired,\r\n  switchUnits: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>{alert.msg}</div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Search extends Component {\r\n  state = {\r\n    text: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    searchPlaces: PropTypes.func.isRequired,\r\n    clearSearch: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired,\r\n    showClear: PropTypes.bool.isRequired\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.text === '') {\r\n      this.props.setAlert('Please enter something', 'dark');\r\n    } else {\r\n      this.props.searchPlaces(this.state.text);\r\n      this.setState({ text: '' });\r\n    }\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} className='form'>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            value={this.state.text}\r\n            placeholder='Enter City Name...'\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value='Search'\r\n            className='btn btn-dark btn-block'\r\n          />\r\n        </form>\r\n        {this.props.showClear && (\r\n          <button\r\n            className='btn btn-grey btn-block'\r\n            onClick={this.props.clearSearch}\r\n          >\r\n            Clear\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period, offset }) => {\r\n  const { dt, main, wind, weather } = period,\r\n    time = dt + offset;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment unix format='LT'>\r\n              {time}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather[0].description}\r\n            src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n            width='100'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>{main.temp.toFixed()}°</h2>\r\n        </li>\r\n        {/* <li>Precipitation: {rain}%</li> */}\r\n        <li>Humidity: {main.humidity}%</li>\r\n        <li>Wind: {wind.speed.toFixed(1)} m/s</li>\r\n        <li>Pressure: {main.pressure.toFixed()} mbar</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day }) => {\r\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment unix format='ddd Do'>\r\n              {ts}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather.description}\r\n            src={`https://www.weatherbit.io/static/img/icons/${\r\n              weather.icon\r\n            }.png`}\r\n            width='70'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>\r\n            {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n          </h2>\r\n        </li>\r\n        <li>Precipitation: {pop}%</li>\r\n        <li>Humidity: {rh}%</li>\r\n        <li>Wind: {wind_spd.toFixed(1)} m/s</li>\r\n        <li>Pressure: {pres.toFixed()} mbar</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\n\r\nexport default class Forecast extends Component {\r\n  state = {\r\n    btn: '16-day forecast',\r\n    target: '16-day'\r\n  };\r\n\r\n  static propTypes = {\r\n    forecastToday: PropTypes.array.isRequired,\r\n    forecast16: PropTypes.array.isRequired,\r\n    current: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    loc: PropTypes.string.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { current, forecastToday, forecast16, loading } = this.props,\r\n      { btn, target } = this.state,\r\n      {\r\n        name,\r\n        timezone,\r\n        dt,\r\n        weather,\r\n        sky,\r\n        wind,\r\n        temp,\r\n        pressure,\r\n        humidity,\r\n        icon\r\n      } = current,\r\n      offset = new Date().getTimezoneOffset() * 60 + timezone,\r\n      time = dt + offset;\r\n    if (forecastToday.length === 0) return null;\r\n    else if (loading) {\r\n      return <Spinner />;\r\n    } else\r\n      return (\r\n        <Router>\r\n          <Fragment>\r\n            <div className='card grid-2'>\r\n              <div className='card grid-2' style={{ padding: '0' }}>\r\n                <div className='all-center'>\r\n                  <img\r\n                    alt={sky}\r\n                    src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                    width='150'\r\n                  />\r\n                </div>\r\n                <div style={{ margin: 'auto 0' }}>\r\n                  <h1>{temp}°</h1>\r\n                  <h2>{name}</h2>\r\n                  <h3>\r\n                    <Moment unix format='LT'>\r\n                      {time}\r\n                    </Moment>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div style={{ padding: '0.7rem 0' }}>\r\n                <ul>\r\n                  <li>\r\n                    <h3>{weather}</h3>\r\n                  </li>\r\n                  <li>Humidity: {humidity}%</li>\r\n                  <li>Wind: {wind.toFixed(1)} m/s</li>\r\n                  <li>Pressure: {pressure.toFixed()} mbar</li>\r\n                </ul>\r\n                <Link\r\n                  to={`/weather-app/${target}/${name}`}\r\n                  className='btn btn-dark btn-sm my-1'\r\n                  onClick={() => {\r\n                    target === 'forecast'\r\n                      ? this.setState({\r\n                          btn: '24-hr forecast',\r\n                          target: 'current'\r\n                        })\r\n                      : this.setState({\r\n                          btn: '16-day forecast',\r\n                          target: '16-day'\r\n                        });\r\n                  }}\r\n                >\r\n                  {btn}\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/weather-app/current/:name'\r\n                render={props => (\r\n                  <div className='grid-3'>\r\n                    {forecastToday.map(period => (\r\n                      <PeriodItem\r\n                        key={period.dt}\r\n                        period={period}\r\n                        offset={offset}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path='/weather-app/16-day/:name'\r\n                render={props => (\r\n                  <div className='grid-4'>\r\n                    {forecast16.map(day => (\r\n                      <DayItem key={day.ts} day={day} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n            </Switch>\r\n          </Fragment>\r\n        </Router>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlaceItem = ({ place, getForecast }) => {\r\n  // state = {\r\n  //   name: '',\r\n  //   sky: '',\r\n  //   temp: '',\r\n  //   icon: ''\r\n  // };\r\n\r\n  // async componentDidMount() {\r\n  //   const { place, units } = this.props;\r\n  //   const res = await axios.get(\r\n  //     `https://api.openweathermap.org/data/2.5/weather?lat=${\r\n  //       place.latitude\r\n  //     }&lon=${place.longitude}&units=${units}&APPID=${\r\n  //       process.env.REACT_APP_OPENWEATHER_KEY\r\n  //     }`\r\n  //   );\r\n  //   this.setState({\r\n  //     name: res.data.name,\r\n  //     temp: res.data.main.temp.toFixed(),\r\n  //     sky: res.data.weather[0].description,\r\n  //     icon: res.data.weather[0].icon\r\n  //   });\r\n  //   console.log(this.state);\r\n  // }\r\n\r\n  console.log(place);\r\n  const {\r\n    city,\r\n    regionCode,\r\n    country,\r\n    latitude,\r\n    longitude,\r\n    temp,\r\n    sky,\r\n    icon\r\n  } = place;\r\n  return (\r\n    <div className='card text-center'>\r\n      <h1>{temp}°</h1>\r\n      <img\r\n        alt={sky}\r\n        src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        width='100'\r\n      />\r\n      <h3>\r\n        {city}, {regionCode}\r\n      </h3>\r\n      <h4>{country}</h4>\r\n      <div>\r\n        <Link\r\n          to={`/weather-app/current/${city}`}\r\n          className='btn btn-dark btn-sm my-1'\r\n          onClick={() => getForecast(city, latitude, longitude)}\r\n        >\r\n          Select\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlaceItem.propTypes = {\r\n  place: PropTypes.object.isRequired,\r\n  getForecast: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Places = ({ places, loading, getForecast }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='grid-3'>\r\n        {places.map(place => (\r\n          <PlaceItem key={place.id} place={place} getForecast={getForecast} />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nPlaces.propTypes = {\r\n  places: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  getForecast: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Places;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>App to get current weather and 16-day forecast.</p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport './App.css';\nimport request from 'superagent';\nimport axios from 'axios';\n// import Moment from 'react-moment';\n\nexport default class App extends Component {\n  state = {\n    units: 'metric',\n    loading: false,\n    alert: null,\n    places: [],\n    place: null,\n    current: {},\n    forecastToday: [],\n    forecast16: []\n  };\n\n  //Search places to get weather for\n  searchPlaces = async text => {\n    this.setState({ loading: true });\n    request\n      .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\n      .query({ limit: '10' })\n      .query({ namePrefix: text })\n      .query({ sort: '-population' })\n      .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\n      .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\n      .set('Accept', 'application/json')\n      .then(res => {\n        this.setState({ places: res.body.data, loading: false });\n        this.getPlaceWeather(this.state.places);\n        console.log(this.state.places);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //Get weather for search request\n  getPlaceWeather = places => {\n    const { units } = this.state;\n    places.map(async place => {\n      let { latitude, longitude } = place;\n      let res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${\n          process.env.REACT_APP_OPENWEATHER_KEY\n        }`\n      );\n      Object.assign(place, {\n        temp: res.data.main.temp.toFixed(),\n        sky: res.data.weather[0].description,\n        icon: res.data.weather[0].icon\n      });\n    });\n  };\n\n  //Clear search\n  clearSearch = () => this.setState({ places: [], loading: false });\n\n  //Set alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n    setTimeout(() => this.setState({ alert: null }), 3000);\n  };\n\n  //Get current weather and 24-hr/16-day forecast\n  getForecast = async (name, lat, lon) => {\n    const { units } = this.state;\n    this.setState({ loading: true });\n    const respo = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    this.setState({\n      current: {\n        name,\n        timezone: respo.data.timezone,\n        dt: respo.data.dt,\n        temp: respo.data.main.temp.toFixed(),\n        wind: respo.data.wind.speed,\n        pressure: respo.data.main.pressure,\n        humidity: respo.data.main.humidity,\n        weather: respo.data.weather[0].main,\n        sky: respo.data.weather[0].description,\n        icon: respo.data.weather[0].icon\n      }\n    });\n    const resp = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    const today = resp.data.list.slice(0, 9);\n    this.setState({\n      forecastToday: today\n    });\n    const un = units === 'metric' ? 'M' : 'I';\n    const res = await axios.get(\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${lat}&lon=${lon}&units=${un}&key=${\n        process.env.REACT_APP_WEATHERBIT_KEY\n      }`\n    );\n    this.setState({\n      forecast16: res.data.data,\n      loading: false,\n      place: { name, lat, lon }\n    });\n    console.log(this.state.forecastToday);\n    console.log(this.state.forecast16);\n    console.log(this.state.current);\n    console.log(this.state.place);\n  };\n\n  // Switch units\n  switchUnits = () => {\n    this.state.units === 'metric'\n      ? this.switcher('imperial')\n      : this.switcher('metric');\n  };\n\n  // Update state after units switch\n  switcher = units => {\n    const { place } = this.state;\n    if (place !== null) {\n      this.setState(\n        () => {\n          return { units };\n        },\n        () => this.getForecast(place.name, place.lat, place.lon)\n      );\n      this.clearSearch();\n    } else {\n      this.setState({ units });\n      this.clearSearch();\n    }\n  };\n\n  render() {\n    const {\n      places,\n      // place,\n      loading,\n      alert,\n      units,\n      current,\n      forecastToday,\n      forecast16,\n      loc\n    } = this.state;\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar switchUnits={this.switchUnits} units={units} />\n          <div className='container'>\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path='/weather-app'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchPlaces={this.searchPlaces}\n                      clearSearch={this.clearSearch}\n                      showClear={places.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                    />\n                    <Places\n                      places={places}\n                      loading={loading}\n                      getForecast={this.getForecast}\n                      units={units}\n                    />\n                  </Fragment>\n                )}\n              />\n              <Route\n                exact\n                path='/weather-app/current/:name'\n                render={props => (\n                  <Forecast\n                    current={current}\n                    forecastToday={forecastToday}\n                    forecast16={forecast16}\n                    loading={loading}\n                    loc={loc}\n                  />\n                )}\n              />\n              <Route exact path='/weather-app/about' component={About} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}