{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_ref","units","lang","switchLang","switchUnits","react_default","a","createElement","className","class","react_router_dom","to","aria-hidden","onClick","Alert","alert","concat","type","msg","Search","state","text","onSubmit","e","preventDefault","_this","props","setAlert","searchPlaces","setState","history","push","onChange","Object","defineProperty","target","name","value","this","placeholder","showClear","clearSearch","Component","PeriodItem","period","offset","dt","main","weather","time","dist_default","locale","unix","format","alt","description","src","icon","style","width","temp","toFixed","DayItem","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","Spinner","react","spinner","margin","display","Forecast","btn","switchButton","button30","button16","_this2","_this$props","current","forecastToday","forecast16","loading","_this$state","timezone","sky","wind","pressure","humidity","Date","getTimezoneOffset","length","layout_Spinner","padding","react_router","exact","path","render","map","weather_PeriodItem","key","weather_DayItem","PlaceItem","place","getForecast","city","regionCode","country","latitude","longitude","Places","places","places_PlaceItem","id","About","href","App","_callee","regenerator_default","wrap","_context","prev","next","request","get","query","limit","namePrefix","sort","languageCode","set","process","then","res","body","data","getPlaceWeather","console","log","catch","err","stop","places1","toConsumableArray","_ref2","asyncToGenerator","mark","_callee2","_context2","axios","sent","assign","_x2","apply","arguments","setTimeout","_callee4","lat","lon","respo","resp","today","_this$state$current","sunrise","sunset","un","_context4","speed","sys","list","slice","_ref4","_callee3","_context3","_x6","switcher","_this$state2","window","location","pathname","_this$state3","layout_Navbar","layout_Alert","Search_Search","places_Places","Forecast_Forecast","pages_About","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.57ba9441.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ units, lang, switchLang, switchUnits }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i class='fas fa-cloud-sun-rain' /> Weather app\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>{lang === 'en' ? 'Search' : 'Поиск'}</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>\r\n            {lang === 'en' ? 'About' : 'Инфо'}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {units === 'metric' ? '°C' : '°F'}\r\n              <i className='fa fa-angle-down' aria-hidden='true' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li>\r\n                <Link to='#' onClick={switchUnits}>\r\n                  {units === 'metric' ? '°F' : '°C'}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {lang === 'en' ? 'EN' : 'RU'}\r\n              <i className='fa fa-angle-down' aria-hidden='true' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li>\r\n                <Link to='#' onClick={switchLang}>\r\n                  {lang === 'en' ? 'RU' : 'EN'}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {/* <Link to='#' onClick={switchLang}>\r\n            {lang === 'en' ? 'RU' : 'EN'}\r\n          </Link> */}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  units: PropTypes.string.isRequired,\r\n  switchUnits: PropTypes.func.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>\r\n        <i className='fas fa-info-circle' /> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Search extends Component {\r\n  state = {\r\n    text: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    searchPlaces: PropTypes.func.isRequired,\r\n    clearSearch: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired,\r\n    showClear: PropTypes.bool.isRequired,\r\n    lang: PropTypes.string.isRequired\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.text === '') {\r\n      const alert =\r\n        this.props.lang === 'en'\r\n          ? 'Please enter something'\r\n          : 'Пожалуйста, введите что-нибудь';\r\n      this.props.setAlert(alert, 'dark');\r\n    } else {\r\n      this.props.searchPlaces(this.state.text);\r\n      this.setState({ text: '' });\r\n      this.props.history.push('/weather-app');\r\n    }\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} className='form'>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            value={this.state.text}\r\n            placeholder={\r\n              this.props.lang === 'en'\r\n                ? 'Enter City Name...'\r\n                : 'Введите название города на русском языке...'\r\n            }\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value={this.props.lang === 'en' ? 'Search' : 'Поиск'}\r\n            className='btn btn-dark btn-block'\r\n          />\r\n        </form>\r\n        {this.props.showClear && (\r\n          <button\r\n            className='btn btn-grey btn-block'\r\n            onClick={this.props.clearSearch}\r\n          >\r\n            {this.props.lang === 'en' ? 'Clear' : 'Очистить'}\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period, offset, lang }) => {\r\n  const { dt, main, weather } = period,\r\n    time = dt + offset;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment locale={lang} unix format='ddd LT'>\r\n              {time}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather[0].description}\r\n            src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <h1>{main.temp.toFixed()}°</h1>\r\n        </li>\r\n        {/* <li>Precipitation: {rain}%</li> */}\r\n        {/* <li>\r\n          {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n          {main.humidity}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n          {wind.speed.toFixed(1)} {lang === 'en' ? 'm/s' : 'м/с'}\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n          {main.pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n        </li> */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day, lang }) => {\r\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day;\r\n  return (\r\n    <div className='card text-center'>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            <Moment locale={lang} unix format='ddd Do'>\r\n              {ts}\r\n            </Moment>\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <img\r\n            alt={weather.description}\r\n            src={`https://www.weatherbit.io/static/img/icons/${\r\n              weather.icon\r\n            }.png`}\r\n            style={{ width: '70px' }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <h2>\r\n            {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n          </h2>\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Precipitation: ' : 'Осадки: '}\r\n          {pop}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n          {rh}%\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n          {wind_spd.toFixed(1)} {lang === 'en' ? 'm/s' : 'м/с'}\r\n        </li>\r\n        <li>\r\n          {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n          {pres.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\n\r\nexport default class Forecast extends Component {\r\n  state = {\r\n    btn: '',\r\n    target: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    forecastToday: PropTypes.array.isRequired,\r\n    forecast16: PropTypes.array.isRequired,\r\n    current: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    lang: PropTypes.string.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.props.match.path === '/weather-app/current/:name' &&\r\n    this.props.lang === 'en'\r\n      ? this.setState({ btn: '16-day forecast', target: '16-day' })\r\n      : this.setState({ btn: 'Прогноз на 16 дней', target: '16-day' });\r\n    // : this.props.lang === 'en'\r\n    // ? this.setState({ btn: '24-hr forecast', target: 'current' })\r\n    // : this.setState({ btn: 'Прогноз на 24 часа', target: 'current' });\r\n  }\r\n\r\n  switchButton = () => {\r\n    const { lang } = this.props,\r\n      { target } = this.state;\r\n    const button30 = lang === 'en' ? '30-hr forecast' : 'Прогноз на 30 часов',\r\n      button16 = lang === 'en' ? '16-day forecast' : 'Прогноз на 16 дней';\r\n    target === '16-day'\r\n      ? this.setState({\r\n          btn: button30,\r\n          target: 'current'\r\n        })\r\n      : this.setState({\r\n          btn: button16,\r\n          target: '16-day'\r\n        });\r\n  };\r\n\r\n  render() {\r\n    const { current, forecastToday, forecast16, loading, lang } = this.props,\r\n      { btn, target } = this.state,\r\n      {\r\n        name,\r\n        timezone,\r\n        dt,\r\n        weather,\r\n        sky,\r\n        wind,\r\n        temp,\r\n        pressure,\r\n        humidity,\r\n        icon\r\n      } = current,\r\n      offset = new Date().getTimezoneOffset() * 60 + timezone,\r\n      time = dt + offset;\r\n    if (forecastToday.length === 0) return null;\r\n    else if (loading) {\r\n      return <Spinner />;\r\n    } else\r\n      return (\r\n        <Router>\r\n          <Fragment>\r\n            <div className='card grid-2'>\r\n              <div className='card grid-2' style={{ padding: '0' }}>\r\n                <div className='all-center'>\r\n                  <img\r\n                    alt={sky}\r\n                    src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                    style={{ width: '150px' }}\r\n                  />\r\n                </div>\r\n                <div style={{ margin: 'auto 0' }}>\r\n                  <h1>{temp}°</h1>\r\n                  <h2>{name}</h2>\r\n                  <h3>\r\n                    <Moment locale={lang} unix format='LT'>\r\n                      {time}\r\n                    </Moment>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div style={{ padding: '0.7rem 0' }}>\r\n                <ul>\r\n                  <li>\r\n                    <h3>{lang === 'en' ? weather : 'Текущие условия:'}</h3>\r\n                  </li>\r\n                  <li>\r\n                    {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n                    {humidity}%\r\n                  </li>\r\n                  <li>\r\n                    {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n                    {wind.toFixed(1)} {lang === 'en' ? 'm/s' : 'м/с'}\r\n                  </li>\r\n                  <li>\r\n                    {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n                    {pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n                  </li>\r\n                </ul>\r\n                <Link\r\n                  to={`/weather-app/${target}/${name}`}\r\n                  className='btn btn-dark btn-sm my-1'\r\n                  onClick={() => this.switchButton()}\r\n                >\r\n                  {btn}\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/weather-app/current/:name'\r\n                render={props => (\r\n                  <div className='grid-5'>\r\n                    {forecastToday.map(period => (\r\n                      <PeriodItem\r\n                        key={period.dt}\r\n                        period={period}\r\n                        offset={offset}\r\n                        lang={lang}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path='/weather-app/16-day/:name'\r\n                render={props => (\r\n                  <div className='grid-4'>\r\n                    {forecast16.map(day => (\r\n                      <DayItem key={day.ts} day={day} lang={lang} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              />\r\n            </Switch>\r\n          </Fragment>\r\n        </Router>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlaceItem = ({ place, getForecast, lang }) => {\r\n  const {\r\n    city,\r\n    regionCode,\r\n    country,\r\n    latitude,\r\n    longitude,\r\n    temp,\r\n    sky,\r\n    icon\r\n  } = place;\r\n  return (\r\n    <div className='card text-center'>\r\n      <h1>{temp}°</h1>\r\n      <img\r\n        alt={sky}\r\n        src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        style={{ width: '100px' }}\r\n      />\r\n      <h3>\r\n        {city}, {regionCode}\r\n      </h3>\r\n      <h4>{country}</h4>\r\n      <div>\r\n        <Link\r\n          to={`/weather-app/current/${city}`}\r\n          className='btn btn-dark btn-sm my-1'\r\n          onClick={() => getForecast(city, latitude, longitude)}\r\n        >\r\n          {lang === 'en' ? 'Select' : 'Выбрать'}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlaceItem.propTypes = {\r\n  place: PropTypes.object.isRequired,\r\n  getForecast: PropTypes.func.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Places = ({ places, getForecast, loading, lang }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='grid-4'>\r\n        {places.map(place => (\r\n          <PlaceItem\r\n            key={place.id}\r\n            place={place}\r\n            getForecast={getForecast}\r\n            lang={lang}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nPlaces.propTypes = {\r\n  places: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  lang: PropTypes.string.isRequired,\r\n  getForecast: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Places;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst About = ({ lang }) => {\r\n  return lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>\r\n        An application for finding weather in more than 134,000 cities in the\r\n        world.\r\n      </p>\r\n      <p>\r\n        Provides information on current weather, as well as a detailed forecast\r\n        for the next 30 hours and a forecast for 16 days.\r\n      </p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>О приложении</h2>\r\n      <p>Приложение для поиска погоды в более чем 134 000 городах мира.</p>\r\n      <p>\r\n        Предоставляет информацию по текущей погоде, а так же подробный прогноз\r\n        на ближайшие 30 часов и прогноз на 16 дней.\r\n      </p>\r\n      <p>\r\n        Сделал <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport './App.css';\nimport request from 'superagent';\nimport axios from 'axios';\n\nexport default class App extends Component {\n  state = {\n    units: 'metric',\n    lang: 'en',\n    loading: false,\n    alert: null,\n    places: [],\n    place: null,\n    current: {},\n    forecastToday: [],\n    forecast16: []\n  };\n\n  //Search places to get weather for\n  searchPlaces = async text => {\n    this.setState({ loading: true });\n    request\n      .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\n      .query({ limit: '10' })\n      .query({ namePrefix: text })\n      .query({ sort: '-population' })\n      .query({ languageCode: this.state.lang })\n      .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\n      .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\n      .set('Accept', 'application/json')\n      .then(res => {\n        if (res.body.data.length === 0) {\n          const alert =\n            this.state.lang === 'en'\n              ? 'No cities found. Check the spelling and try again'\n              : 'Ничего не найдено. Проверьте правильность написания и попробуйте снова';\n          this.setAlert(alert, 'dark');\n          this.setState({ loading: false });\n        } else {\n          this.setState({ places: res.body.data, loading: false });\n          this.getPlaceWeather();\n        }\n        console.log(this.state.places);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //Get weather for search request\n  getPlaceWeather = () => {\n    const { units, places } = this.state;\n    const places1 = [...places];\n    places1.map(async place => {\n      let { latitude, longitude } = place;\n      let res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${\n          process.env.REACT_APP_OPENWEATHER_KEY\n        }`\n      );\n      Object.assign(place, {\n        temp: res.data.main.temp.toFixed(),\n        sky: res.data.weather[0].description,\n        icon: res.data.weather[0].icon\n      });\n      this.setState({ places: places1 });\n    });\n  };\n\n  //Clear search\n  clearSearch = () => this.setState({ places: [], loading: false });\n\n  //Set alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n    setTimeout(() => this.setState({ alert: null }), 3000);\n  };\n\n  //Get current weather and 24-hr/16-day forecast\n  getForecast = async (name, lat, lon) => {\n    const { units } = this.state;\n    this.setState({ loading: true });\n    const respo = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    this.setState({\n      current: {\n        name,\n        timezone: respo.data.timezone,\n        dt: respo.data.dt,\n        temp: respo.data.main.temp.toFixed(),\n        wind: respo.data.wind.speed,\n        pressure: respo.data.main.pressure,\n        humidity: respo.data.main.humidity,\n        weather: respo.data.weather[0].main,\n        sky: respo.data.weather[0].description,\n        icon: respo.data.weather[0].icon,\n        sunrise: respo.data.sys.sunrise,\n        sunset: respo.data.sys.sunset\n      }\n    });\n    const resp = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${units}&APPID=${\n        process.env.REACT_APP_OPENWEATHER_KEY\n      }`\n    );\n    const today = resp.data.list.slice(0, 10);\n    const { sunrise, sunset } = this.state.current;\n    today.map(async period => {\n      //Change icons according to local time\n      if (sunset < period.dt && period.dt < sunrise + 86400) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\n      } else if (sunrise < period.dt && period.dt < sunset) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\n      } else if (sunset - 86400 < period.dt && period.dt < sunrise) {\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\n      }\n    });\n    this.setState({\n      forecastToday: today\n    });\n    const un = units === 'metric' ? 'M' : 'I';\n    const res = await axios.get(\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${lat}&lon=${lon}&units=${un}&key=${\n        process.env.REACT_APP_WEATHERBIT_KEY\n      }`\n    );\n    this.setState({\n      forecast16: res.data.data,\n      loading: false,\n      place: { name, lat, lon }\n    });\n    console.log(this.state.forecastToday);\n    console.log(this.state.forecast16);\n    console.log(this.state.current);\n    console.log(this.state.place);\n  };\n\n  //Switch language\n  switchLang = () => {\n    this.state.lang === 'en'\n      ? this.setState({ lang: 'ru' })\n      : this.setState({ lang: 'en' });\n  };\n\n  // Switch units init\n  switchUnits = () => {\n    this.state.units === 'metric'\n      ? this.switcher('imperial')\n      : this.switcher('metric');\n  };\n\n  //Switch units\n  switcher = units => {\n    const { place, places } = this.state;\n    if (place !== null && window.location.pathname !== '/weather-app') {\n      this.setState(\n        () => {\n          return { units };\n        },\n        () => this.getForecast(place.name, place.lat, place.lon)\n      );\n      this.clearSearch();\n    } else if (\n      (place === null && places.length > 0) ||\n      (place !== null && window.location.pathname === '/weather-app')\n    ) {\n      this.setState(\n        () => {\n          return { units };\n        },\n        () => this.getPlaceWeather()\n      );\n    } else this.setState({ units });\n  };\n\n  render() {\n    const {\n      places,\n      // place,\n      loading,\n      alert,\n      units,\n      lang,\n      current,\n      forecastToday,\n      forecast16\n    } = this.state;\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar\n            switchUnits={this.switchUnits}\n            units={units}\n            switchLang={this.switchLang}\n            lang={lang}\n          />\n          <div className='container'>\n            <Alert alert={alert} lang={lang} />\n            <Route\n              path='/weather-app'\n              render={props => (\n                <Search\n                  {...props}\n                  searchPlaces={this.searchPlaces}\n                  clearSearch={this.clearSearch}\n                  showClear={\n                    places.length > 0 &&\n                    window.location.pathname === '/weather-app'\n                      ? true\n                      : false\n                  }\n                  setAlert={this.setAlert}\n                  lang={lang}\n                />\n              )}\n            />\n            <Switch>\n              <Route\n                exact\n                path='/weather-app'\n                render={props => (\n                  <Places\n                    places={places}\n                    getForecast={this.getForecast}\n                    loading={loading}\n                    lang={lang}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path='/weather-app/current/:name'\n                render={props => (\n                  <Forecast\n                    {...props}\n                    current={current}\n                    forecastToday={forecastToday}\n                    forecast16={forecast16}\n                    loading={loading}\n                    lang={lang}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path='/weather-app/about'\n                render={props => <About lang={lang} />}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'moment/locale/ru';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}