{"version":3,"sources":["components/layout/spinner.gif","context/weather/weatherContext.js","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","components/pages/NotFound.js","context/weather/weatherReducer.js","context/types.js","context/weather/WeatherState.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","weatherContext","createContext","Navbar","useContext","WeatherContext","units","lang","switchLang","switchUnits","react_default","a","createElement","className","react_router_dom","to","onClick","Alert","alert","concat","type","msg","Search","_ref","history","location","searchPlaces","clearSearch","setAlert","places","_useState","useState","_useState2","Object","slicedToArray","text","setText","useEffect","push","onSubmit","e","preventDefault","name","value","placeholder","onChange","target","length","pathname","PeriodItem","period","offset","dt","main","weather","time","dist_default","locale","unix","format","alt","description","src","icon","style","width","temp","toFixed","DayItem","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","react","Spinner","spinner","margin","display","Forecast","current","forecastToday","forecast15","getWeather","place","loading","btn","setBtn","_useState3","_useState4","setTarget","switchButton","timezone","sky","wind","pressure","humidity","Date","getTimezoneOffset","layout_Spinner","switchTarget","react_router","exact","path","render","props","map","weather_PeriodItem","key","weather_DayItem","PlaceItem","selectPlace","setTemp","setSky","_useState5","_useState6","setIcon","getPlaceWeather","_ref2","asyncToGenerator","regenerator_default","mark","_callee","latitude","longitude","res","_res$data","wrap","_context","prev","next","axios","get","process","sent","data","stop","apply","this","arguments","city","regionCode","country","Places","places_PlaceItem","id","About","href","NotFound","weatherReducer","state","action","objectSpread","payload","WeatherState","_useReducer","useReducer","WeatherReducer","_useReducer2","dispatch","setTimeout","setLoading","request","query","limit","namePrefix","sort","languageCode","set","then","body","catch","err","console","log","_x","_callee4","respo","_respo$data","sys","sunrise","sunset","resp","today","un","_context4","speed","list","slice","_ref3","_callee2","_context2","_x4","_ref4","_callee3","_context3","_x5","_x2","_x3","weather_weatherContext","Provider","children","App","weather_WeatherState","layout_Navbar","layout_Alert","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6e3be67f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import { createContext } from 'react';\r\n\r\nconst weatherContext = createContext();\r\n\r\nexport default weatherContext;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Navbar = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  const { units, lang, switchLang, switchUnits } = weatherContext;\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className='fas fa-cloud-sun-rain' /> Weather app\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/weather-app'>{lang === 'en' ? 'Search' : 'Поиск'}</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/weather-app/about'>\r\n            {lang === 'en' ? 'About' : 'Инфо'}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {units === 'metric' ? '°C' : '°F'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={() => switchUnits(units)}>\r\n                {units === 'metric' ? '°F' : '°C'}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div className='switch'>\r\n            <div className='select'>\r\n              {lang === 'en' ? 'EN' : 'RU'}\r\n              <i className='fa fa-angle-down' />\r\n            </div>\r\n            <ul className='select-drop'>\r\n              <li onClick={() => switchLang(lang)}>\r\n                {lang === 'en' ? 'RU' : 'EN'}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Alert = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { alert } = weatherContext;\r\n\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type} text-center`}>\r\n        <i className='fas fa-info-circle' /> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Search = ({ history, location }) => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { searchPlaces, clearSearch, setAlert, lang, places } = weatherContext;\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    history.push('/weather-app');\r\n    //eslint-disable-next-line\r\n  }, [places]);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      const alert =\r\n        lang === 'en'\r\n          ? 'Please enter something'\r\n          : 'Пожалуйста, введите что-нибудь';\r\n      setAlert(alert, 'dark');\r\n    } else {\r\n      searchPlaces(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  const onChange = e => setText(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          value={text}\r\n          placeholder={\r\n            lang === 'en'\r\n              ? 'Enter City Name...'\r\n              : 'Введите название города на русском языке...'\r\n          }\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value={lang === 'en' ? 'Search' : 'Поиск'}\r\n          className='btn btn-dark btn-block'\r\n        />\r\n      </form>\r\n      {places.length > 0 && location.pathname === '/weather-app' && (\r\n        <button className='btn btn-grey btn-block my-1' onClick={clearSearch}>\r\n          {lang === 'en' ? 'Clear' : 'Очистить'}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PeriodItem = ({ period, offset, lang }) => {\r\n  const { dt, main, weather } = period,\r\n    time = dt + offset;\r\n  return (\r\n    <div className='weatheritem'>\r\n      <h3>\r\n        <Moment locale={lang} unix format='ddd LT'>\r\n          {time}\r\n        </Moment>\r\n      </h3>\r\n      <img\r\n        alt={weather[0].description}\r\n        src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n        style={{ width: '100px' }}\r\n      />\r\n      <h1>{main.temp.toFixed()}°</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nPeriodItem.propTypes = {\r\n  period: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PeriodItem;\r\n","import React, { Fragment } from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayItem = ({ day, lang, units }) => {\r\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day;\r\n  return (\r\n    <Fragment>\r\n      <div className='weatheritem'>\r\n        <h3>\r\n          <Moment locale={lang} unix format='dd Do'>\r\n            {ts}\r\n          </Moment>\r\n        </h3>\r\n        <img\r\n          alt={weather.description}\r\n          src={`https://www.weatherbit.io/static/img/icons/${weather.icon}.png`}\r\n          style={{ width: '70px' }}\r\n        />\r\n        <h2>\r\n          {max_temp.toFixed()}°/{min_temp.toFixed()}°\r\n        </h2>\r\n        <div className='conditions'>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <i className='fas fa-umbrella' />\r\n                {pop}%\r\n              </li>\r\n              <li>\r\n                <i className='fas fa-water' />\r\n                {rh}%\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <i className='fas fa-wind' />\r\n                {wind_spd.toFixed(1)}\r\n                {lang === 'en'\r\n                  ? units === 'metric'\r\n                    ? 'm/s'\r\n                    : 'mph'\r\n                  : units === 'metric'\r\n                  ? 'м/c'\r\n                  : 'м/ч'}\r\n              </li>\r\n              <li>\r\n                <i className='fas fa-square' />\r\n                {pres.toFixed()}\r\n                {lang === 'en' ? 'mb' : 'мб'}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDayItem.propTypes = {\r\n  day: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport PeriodItem from './PeriodItem';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\nimport Moment from 'react-moment';\r\n\r\nconst Forecast = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    current,\r\n    forecastToday,\r\n    forecast15,\r\n    getWeather,\r\n    place,\r\n    loading,\r\n    units,\r\n    lang\r\n  } = weatherContext;\r\n\r\n  const [btn, setBtn] = useState('');\r\n  const [target, setTarget] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (lang === 'en') {\r\n      setBtn('15-day forecast');\r\n      setTarget('15-day');\r\n    } else {\r\n      setBtn('Прогноз на 15 дней');\r\n      setTarget('15-day');\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    switchButton();\r\n    //eslint-disable-next-line\r\n  }, [lang, target]);\r\n\r\n  useEffect(() => {\r\n    getWeather(place, units);\r\n    //eslint-disable-next-line\r\n  }, [units]);\r\n\r\n  const switchTarget = target => {\r\n    if (target === '15-day') {\r\n      setTarget('current');\r\n    } else {\r\n      setTarget('15-day');\r\n    }\r\n  };\r\n\r\n  const switchButton = () => {\r\n    target === '15-day'\r\n      ? lang === 'en'\r\n        ? setBtn('15-day forecast')\r\n        : setBtn('Прогноз на 15 дней')\r\n      : lang === 'en'\r\n      ? setBtn('48-hr forecast')\r\n      : setBtn('Прогноз на 48 часов');\r\n  };\r\n\r\n  const {\r\n      name,\r\n      timezone,\r\n      dt,\r\n      weather,\r\n      sky,\r\n      wind,\r\n      temp,\r\n      pressure,\r\n      humidity,\r\n      icon\r\n    } = current,\r\n    offset = new Date().getTimezoneOffset() * 60 + timezone,\r\n    time = dt + offset;\r\n  if (loading || forecast15.length === 0) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <Router>\r\n        <Fragment>\r\n          <div className='card grid-2'>\r\n            <div className='card grid-2'>\r\n              <div className='all-center'>\r\n                <img\r\n                  alt={sky}\r\n                  src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                  style={{ width: '150px' }}\r\n                />\r\n              </div>\r\n              <div style={{ margin: 'auto 0' }}>\r\n                <h1>{temp.toFixed()}°</h1>\r\n                <h3>\r\n                  {forecast15[0].max_temp.toFixed()}°/\r\n                  {forecast15[0].min_temp.toFixed()}°\r\n                </h3>\r\n                <h2>{name}</h2>\r\n                <h4>\r\n                  <Moment locale={lang} unix format='LT'>\r\n                    {time}\r\n                  </Moment>\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div style={{ margin: 'auto 0' }}>\r\n              <ul>\r\n                <li>\r\n                  <h3>{lang === 'en' ? weather : 'Текущие условия:'}</h3>\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-water' />{' '}\r\n                  {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n                  {humidity}%\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-wind' />{' '}\r\n                  {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n                  {wind.toFixed(1)}{' '}\r\n                  {lang === 'en'\r\n                    ? units === 'metric'\r\n                      ? 'm/s'\r\n                      : 'mph'\r\n                    : units === 'metric'\r\n                    ? 'м/c'\r\n                    : 'м/ч'}\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-square' />{' '}\r\n                  {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n                  {pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n                </li>\r\n              </ul>\r\n              <Link\r\n                to={`/weather-app/${target}/${name}`}\r\n                className='btn btn-dark btn-sm my-1'\r\n                onClick={() => switchTarget(target)}\r\n              >\r\n                {btn}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/weather-app/current/:name'\r\n              render={props => (\r\n                <div className='listitems'>\r\n                  {forecastToday.map(period => (\r\n                    <PeriodItem\r\n                      key={period.dt}\r\n                      period={period}\r\n                      offset={offset}\r\n                      lang={lang}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path='/weather-app/15-day/:name'\r\n              render={props => (\r\n                <div className='listitems'>\r\n                  {forecast15.map(day => (\r\n                    <DayItem key={day.ts} day={day} lang={lang} units={units} />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    );\r\n};\r\n\r\nexport default Forecast;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlaceItem = ({ place }) => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  const { units, selectPlace } = weatherContext;\r\n\r\n  const [temp, setTemp] = useState('');\r\n  const [sky, setSky] = useState('');\r\n  const [icon, setIcon] = useState('');\r\n\r\n  useEffect(() => {\r\n    getPlaceWeather();\r\n    //eslint-disable-next-line\r\n  }, [units]);\r\n\r\n  const getPlaceWeather = async () => {\r\n    const { latitude, longitude } = place;\r\n    const res = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n    );\r\n    const { main, weather } = res.data;\r\n    if (main.temp.toFixed() === '-0') main.temp = 0;\r\n    setTemp(main.temp.toFixed());\r\n    setSky(weather[0].description);\r\n    setIcon(weather[0].icon);\r\n  };\r\n\r\n  const { city, regionCode, country } = place;\r\n  return (\r\n    <Link\r\n      to={`/weather-app/current/${city}`}\r\n      onClick={() => selectPlace(place)}\r\n    >\r\n      <div className='placeitem'>\r\n        <h1>{temp}°</h1>\r\n        <img\r\n          alt={sky}\r\n          src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          style={{ width: '100px' }}\r\n        />\r\n        <div className='all-center'>\r\n          <h3>\r\n            {city}, {regionCode}\r\n          </h3>\r\n          <h4>{country}</h4>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPlaceItem.propTypes = {\r\n  place: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React, { useContext } from 'react';\r\nimport PlaceItem from './PlaceItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst Places = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { places, loading } = weatherContext;\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='listitems'>\r\n        {places.map(place => (\r\n          <PlaceItem key={place.id} place={place} />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Places;\r\n","import React, { useContext, Fragment } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst About = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  return weatherContext.lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>About this app</h2>\r\n      <p>\r\n        An application for finding weather in more than 134,000 cities in the\r\n        world.\r\n      </p>\r\n      <p>\r\n        Provides information on current weather, as well as a detailed forecast\r\n        for the next 48 hours and a forecast for 15 days.\r\n      </p>\r\n      <p>\r\n        Made by <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>О приложении</h2>\r\n      <p>Приложение для поиска погоды в более чем 134 000 городах мира.</p>\r\n      <p>\r\n        Предоставляет информацию по текущей погоде, а так же подробный прогноз\r\n        на ближайшие 48 часов и прогноз на 15 дней.\r\n      </p>\r\n      <p>\r\n        Сделал <a href='https://github.com/yalalex/'>Alex Y</a>.\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useContext, Fragment } from 'react';\r\nimport WeatherContext from '../../context/weather/weatherContext';\r\n\r\nconst NotFound = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  return weatherContext.lang === 'en' ? (\r\n    <Fragment>\r\n      <h2>Not Found</h2>\r\n      <p className='lead'>The page you are looking for does not exist...</p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <h2>Страница не найдена</h2>\r\n      <p className='lead'>Страница, которую вы ищете, не существует...</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_PLACES:\r\n      return {\r\n        ...state,\r\n        places: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        places: []\r\n      };\r\n    case SELECT_PLACE:\r\n      return {\r\n        ...state,\r\n        place: action.payload\r\n      };\r\n    case GET_CURRENT_WEATHER:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case GET_TODAY_WEATHER:\r\n      return {\r\n        ...state,\r\n        forecastToday: action.payload\r\n      };\r\n    case GET_FORECAST:\r\n      return {\r\n        ...state,\r\n        forecast15: action.payload,\r\n        loading: false\r\n      };\r\n    case SWITCH_LANG:\r\n      return {\r\n        ...state,\r\n        lang: action.payload === 'en' ? 'ru' : 'en'\r\n      };\r\n    case SWITCH_UNITS:\r\n      return {\r\n        ...state,\r\n        units: action.payload === 'metric' ? 'imperial' : 'metric'\r\n      };\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: action.payload\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: null\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_PLACES = 'SEARCH_PLACES';\r\nexport const SELECT_PLACE = 'SELECT_PLACE';\r\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const GET_CURRENT_WEATHER = 'GET_CURRENT_WEATHER';\r\nexport const GET_TODAY_WEATHER = 'GET_TODAY_WEATHER';\r\nexport const GET_FORECAST = 'GET_FORECAST';\r\nexport const SWITCH_LANG = 'SWITCH_LANG';\r\nexport const SWITCH_UNITS = 'SWITCH_UNITS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\n","import React, { useReducer } from 'react';\r\nimport request from 'superagent';\r\nimport axios from 'axios';\r\nimport WeatherContext from './weatherContext';\r\nimport WeatherReducer from './weatherReducer';\r\nimport {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../types';\r\n\r\nconst WeatherState = props => {\r\n  const initialState = {\r\n    units: 'metric',\r\n    lang: 'en',\r\n    loading: false,\r\n    alert: null,\r\n    places: [],\r\n    place: null,\r\n    current: {},\r\n    forecastToday: [],\r\n    forecast15: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(WeatherReducer, initialState);\r\n\r\n  //Set alert\r\n  const setAlert = (msg, type) => {\r\n    dispatch({ type: SET_ALERT, payload: { msg, type } });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n  };\r\n\r\n  //Search places to get weather for\r\n  const searchPlaces = async text => {\r\n    setLoading();\r\n    request\r\n      .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\r\n      .query({ limit: '10' })\r\n      .query({ namePrefix: text })\r\n      .query({ sort: '-population' })\r\n      .query({ languageCode: state.lang })\r\n      .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\r\n      .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\r\n      .set('Accept', 'application/json')\r\n      .then(res => {\r\n        if (res.body.data.length === 0) {\r\n          const alert =\r\n            state.lang === 'en'\r\n              ? 'No cities found. Check the spelling and try again'\r\n              : 'Ничего не найдено. Проверьте правильность написания и попробуйте снова';\r\n          setAlert(alert, 'dark');\r\n        } else {\r\n          dispatch({ type: SEARCH_PLACES, payload: res.body.data });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Select place in search and get weather for it\r\n  const selectPlace = place => {\r\n    dispatch({ type: SELECT_PLACE, payload: place });\r\n  };\r\n\r\n  //Get current weather and 48-hr/15-day forecast\r\n  const getWeather = async (place, units) => {\r\n    setLoading();\r\n    const { city, latitude, longitude } = place;\r\n    //Get current weather\r\n    const respo = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n    );\r\n    const { timezone, dt, main, wind, weather, sys } = respo.data,\r\n      { temp, pressure, humidity } = main,\r\n      { sunrise, sunset } = sys;\r\n    const current = {\r\n      name: city,\r\n      timezone,\r\n      dt,\r\n      temp,\r\n      wind: wind.speed,\r\n      pressure,\r\n      humidity,\r\n      weather: weather[0].main,\r\n      sky: weather[0].description,\r\n      icon: weather[0].icon,\r\n      sunrise,\r\n      sunset\r\n    };\r\n    if (current.temp.toFixed() === '-0') current.temp = 0;\r\n    dispatch({ type: GET_CURRENT_WEATHER, payload: current });\r\n    //Get forecast for 48 hours\r\n    const resp = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n    );\r\n    const today = resp.data.list.slice(0, 15);\r\n    today.map(async period => {\r\n      if (period.main.temp.toFixed() === '-0') period.main.temp = 0;\r\n      //Change icons according to local time in requested place\r\n      if (sunrise + 86400 < period.dt && period.dt < sunset + 86400) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n      } else if (sunset < period.dt && period.dt < sunrise + 86400) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n      } else if (sunrise < period.dt && period.dt < sunset) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n      } else if (sunset - 86400 < period.dt && period.dt < sunrise) {\r\n        period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n      }\r\n    });\r\n    dispatch({ type: GET_TODAY_WEATHER, payload: today });\r\n    //Get forecast for 15 days\r\n    const un = units === 'metric' ? 'M' : 'I';\r\n    const res = await axios.get(\r\n      `https://api.weatherbit.io/v2.0/forecast/daily?lat=${latitude}&lon=${longitude}&units=${un}&key=${process.env.REACT_APP_WEATHERBIT_KEY}`\r\n    );\r\n    const forecast15 = res.data.data.slice(1, 16);\r\n    forecast15.map(async day => {\r\n      if (day.max_temp.toFixed() === '-0') day.max_temp = 0;\r\n      if (day.min_temp.toFixed() === '-0') day.min_temp = 0;\r\n    });\r\n    dispatch({ type: GET_FORECAST, payload: forecast15 });\r\n  };\r\n\r\n  //Switch language\r\n  const switchLang = lang => dispatch({ type: SWITCH_LANG, payload: lang });\r\n\r\n  // Switch units\r\n  const switchUnits = units => dispatch({ type: SWITCH_UNITS, payload: units });\r\n\r\n  //Clear search\r\n  const clearSearch = () => dispatch({ type: CLEAR_SEARCH });\r\n\r\n  //Set loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        units: state.units,\r\n        lang: state.lang,\r\n        loading: state.loading,\r\n        alert: state.alert,\r\n        places: state.places,\r\n        place: state.place,\r\n        current: state.current,\r\n        forecastToday: state.forecastToday,\r\n        forecast15: state.forecast15,\r\n        searchPlaces,\r\n        clearSearch,\r\n        setAlert,\r\n        selectPlace,\r\n        getWeather,\r\n        switchUnits,\r\n        switchLang\r\n      }}\r\n    >\r\n      {props.children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport './App.css';\nimport WeatherState from './context/weather/WeatherState';\n\nconst App = () => {\n  return (\n    <WeatherState>\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <div className='container'>\n            <Alert />\n            <Route path='/weather-app' component={Search} />\n            <Switch>\n              <Route exact path='/weather-app' component={Places} />\n              <Route\n                exact\n                path='/weather-app/current/:name'\n                component={Forecast}\n              />\n              <Route exact path='/weather-app/about' component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </WeatherState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'moment/locale/ru';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}